In archive build/libA.a:

notA.a.o:     file format elf64-x86-64
rw-r--r-- 0/0  25728 Jan  1 08:00 1970 notA.a.o

SYMBOL TABLE:
0000000000000000 l    df *ABS*	0000000000000000 notA.a.cpp
0000000000000000 l    d  .text	0000000000000000 .text
0000000000000000 l    d  .data	0000000000000000 .data
0000000000000000 l    d  .bss	0000000000000000 .bss
0000000000000000 l    d  .rodata	0000000000000000 .rodata
00000000000000a0 l     O .rodata	0000000000000008 std::__detail::_S_invalid_state_id
0000000000000020 l     O .bss	0000000000000020 MassSTR
0000000000000000 l     F .text	0000000000000016 LenOfMassSTR()
0000000000000000 l    d  .comment	0000000000000000 .comment
0000000000000000 l    d  .group	0000000000000000 .group
0000000000000000         *UND*	0000000000000000 _GLOBAL_OFFSET_TABLE_
0000000000000000         *UND*	0000000000000000 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size() const
0000000000000016 g     F .text	000000000000004f A()




A.a.o:     file format elf64-x86-64
rw-r--r-- 0/0  25808 Jan  1 08:00 1970 A.a.o

SYMBOL TABLE:
0000000000000000 l    df *ABS*	0000000000000000 A.a.cpp
0000000000000000 l    d  .text	0000000000000000 .text
0000000000000000 l    d  .data	0000000000000000 .data
0000000000000000 l    d  .bss	0000000000000000 .bss
0000000000000000 l    d  .rodata	0000000000000000 .rodata
0000000000000020 l     O .bss	0000000000000020 MassSTR
0000000000000000 l     F .text	0000000000000016 LenOfMassSTR()
00000000000000a8 l     O .rodata	0000000000000004 d
0000000000000004       O *COM*	0000000000000004 a
0000000000000000  w    O .bss	0000000000000004 b
0000000000000016 g     F .text	000000000000004f A()




some.a.o:     file format elf64-x86-64
rw-r--r-- 0/0  25808 Jan  1 08:00 1970 some.a.o

SYMBOL TABLE:
0000000000000000 l    df *ABS*	0000000000000000 some.a.cpp
0000000000000000 l    d  .text	0000000000000000 .text
0000000000000000 l    d  .data	0000000000000000 .data
0000000000000000 l    d  .bss	0000000000000000 .bss
0000000000000000 l    d  .rodata	0000000000000000 .rodata
0000000000000000 l     O .rodata	0000000000000001 std::piecewise_construct
0000000000000001 l     O .rodata	0000000000000001 std::allocator_arg
0000000000000002 l     O .rodata	0000000000000001 std::ignore
0000000000000000 l     O .bss	0000000000000001 std::__ioinit
0000000000000004 l     O .rodata	0000000000000004 __gnu_cxx::__default_lock_policy
0000000000000008 l     O .rodata	0000000000000001 std::defer_lock
0000000000000009 l     O .rodata	0000000000000001 std::try_to_lock
000000000000000a l     O .rodata	0000000000000001 std::adopt_lock
000000000000000c l     O .rodata	0000000000000004 std::regex_constants::icase
0000000000000010 l     O .rodata	0000000000000004 std::regex_constants::nosubs
0000000000000014 l     O .rodata	0000000000000004 std::regex_constants::optimize
0000000000000018 l     O .rodata	0000000000000004 std::regex_constants::collate
000000000000001c l     O .rodata	0000000000000004 std::regex_constants::ECMAScript
0000000000000020 l     O .rodata	0000000000000004 std::regex_constants::basic
0000000000000024 l     O .rodata	0000000000000004 std::regex_constants::extended
0000000000000028 l     O .rodata	0000000000000004 std::regex_constants::awk
000000000000002c l     O .rodata	0000000000000004 std::regex_constants::grep
0000000000000030 l     O .rodata	0000000000000004 std::regex_constants::egrep
0000000000000034 l     O .rodata	0000000000000004 std::regex_constants::__polynomial
0000000000000038 l     O .rodata	0000000000000004 std::regex_constants::match_default
000000000000003c l     O .rodata	0000000000000004 std::regex_constants::match_not_bol
0000000000000040 l     O .rodata	0000000000000004 std::regex_constants::match_not_eol
0000000000000044 l     O .rodata	0000000000000004 std::regex_constants::match_not_bow
0000000000000048 l     O .rodata	0000000000000004 std::regex_constants::match_not_eow
000000000000004c l     O .rodata	0000000000000004 std::regex_constants::match_any
0000000000000050 l     O .rodata	0000000000000004 std::regex_constants::match_not_null
0000000000000054 l     O .rodata	0000000000000004 std::regex_constants::match_continuous
0000000000000058 l     O .rodata	0000000000000004 std::regex_constants::match_prev_avail
000000000000005c l     O .rodata	0000000000000004 std::regex_constants::format_default
0000000000000060 l     O .rodata	0000000000000004 std::regex_constants::format_sed
0000000000000064 l     O .rodata	0000000000000004 std::regex_constants::format_no_copy
0000000000000068 l     O .rodata	0000000000000004 std::regex_constants::format_first_only
000000000000006c l     O .rodata	0000000000000004 std::regex_constants::error_collate
0000000000000070 l     O .rodata	0000000000000004 std::regex_constants::error_ctype
0000000000000074 l     O .rodata	0000000000000004 std::regex_constants::error_escape
0000000000000078 l     O .rodata	0000000000000004 std::regex_constants::error_backref
000000000000007c l     O .rodata	0000000000000004 std::regex_constants::error_brack
0000000000000080 l     O .rodata	0000000000000004 std::regex_constants::error_paren
0000000000000084 l     O .rodata	0000000000000004 std::regex_constants::error_brace
0000000000000088 l     O .rodata	0000000000000004 std::regex_constants::error_badbrace
000000000000008c l     O .rodata	0000000000000004 std::regex_constants::error_range
0000000000000090 l     O .rodata	0000000000000004 std::regex_constants::error_space
0000000000000094 l     O .rodata	0000000000000004 std::regex_constants::error_badrepeat
0000000000000098 l     O .rodata	0000000000000004 std::regex_constants::error_complexity
000000000000009c l     O .rodata	0000000000000004 std::regex_constants::error_stack
00000000000000a0 l     O .rodata	0000000000000008 std::__detail::_S_invalid_state_id
0000000000000020 l     O .bss	0000000000000020 MassSTR
0000000000000000 l     F .text	0000000000000016 LenOfMassSTR()
0000000000000086 l     F .text	00000000000000ec __static_initialization_and_destruction_0(int, int)
0000000000000000 l    d  .gcc_except_table	0000000000000000 .gcc_except_table
0000000000000172 l     F .text	0000000000000019 _GLOBAL__sub_I__Z8notATestv
0000000000000000 l    d  .init_array	0000000000000000 .init_array
0000000000000000 l    d  .data.rel.local.DW.ref.__gxx_personality_v0	0000000000000000 .data.rel.local.DW.ref.__gxx_personality_v0
0000000000000000 l    d  .note.GNU-stack	0000000000000000 .note.GNU-stack
0000000000000000 l    d  .note.gnu.property	0000000000000000 .note.gnu.property
0000000000000000 l    d  .eh_frame	0000000000000000 .eh_frame
0000000000000000 l    d  .comment	0000000000000000 .comment
0000000000000000 l    d  .group	0000000000000000 .group
0000000000000000         *UND*	0000000000000000 _GLOBAL_OFFSET_TABLE_
0000000000000000         *UND*	0000000000000000 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size() const
0000000000000016 g     F .text	0000000000000017 notATest()
0000000000000000         *UND*	0000000000000000 puts
000000000000002d g     F .text	0000000000000017 testPrint()
0000000000000044 g     F .text	0000000000000042 testPrint(int)
0000000000000000         *UND*	0000000000000000 printf
0000000000000000  w    O .data.rel.local.DW.ref.__gxx_personality_v0	0000000000000008 .hidden DW.ref.__gxx_personality_v0
0000000000000000         *UND*	0000000000000000 std::ios_base::Init::Init()
0000000000000000         *UND*	0000000000000000 .hidden __dso_handle
0000000000000000         *UND*	0000000000000000 std::ios_base::Init::~Init()
0000000000000000         *UND*	0000000000000000 __cxa_atexit
0000000000000000         *UND*	0000000000000000 std::allocator<char>::allocator()
0000000000000000         *UND*	0000000000000000 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
0000000000000000         *UND*	0000000000000000 std::allocator<char>::~allocator()
0000000000000000         *UND*	0000000000000000 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
0000000000000000         *UND*	0000000000000000 _Unwind_Resume
0000000000000000         *UND*	0000000000000000 __stack_chk_fail
0000000000000000         *UND*	0000000000000000 __gxx_personality_v0


