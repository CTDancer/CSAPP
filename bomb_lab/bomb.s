
./bomb:     file format elf64-x86-64

Contents of section .interp:
 0318 2f6c6962 36342f6c 642d6c69 6e75782d  /lib64/ld-linux-
 0328 7838362d 36342e73 6f2e3200           x86-64.so.2.    
Contents of section .note.gnu.property:
 0338 04000000 10000000 05000000 474e5500  ............GNU.
 0348 020000c0 04000000 03000000 00000000  ................
Contents of section .note.gnu.build-id:
 0358 04000000 14000000 03000000 474e5500  ............GNU.
 0368 62c9e083 68e22934 c6475764 a8764105  b...h.)4.GWd.vA.
 0378 30ff0857                             0..W            
Contents of section .note.ABI-tag:
 037c 04000000 10000000 01000000 474e5500  ............GNU.
 038c 00000000 03000000 02000000 00000000  ................
Contents of section .gnu.hash:
 03a0 03000000 16000000 01000000 06000000  ................
 03b0 00009102 01000400 16000000 00000000  ................
 03c0 18000000 d065ce6d 73960702 15980c43  .....e.ms......C
Contents of section .dynsym:
 03d0 00000000 00000000 00000000 00000000  ................
 03e0 00000000 00000000 c7010000 12000000  ................
 03f0 00000000 00000000 00000000 00000000  ................
 0400 77010000 12000000 00000000 00000000  w...............
 0410 00000000 00000000 7c000000 12000000  ........|.......
 0420 00000000 00000000 00000000 00000000  ................
 0430 71000000 12000000 00000000 00000000  q...............
 0440 00000000 00000000 d8000000 11000000  ................
 0450 00000000 00000000 00000000 00000000  ................
 0460 09020000 12000000 00000000 00000000  ................
 0470 00000000 00000000 d4010000 12000000  ................
 0480 00000000 00000000 00000000 00000000  ................
 0490 27010000 12000000 00000000 00000000  '...............
 04a0 00000000 00000000 55000000 12000000  ........U.......
 04b0 00000000 00000000 00000000 00000000  ................
 04c0 f8010000 12000000 00000000 00000000  ................
 04d0 00000000 00000000 e4010000 12000000  ................
 04e0 00000000 00000000 00000000 00000000  ................
 04f0 11020000 12000000 00000000 00000000  ................
 0500 00000000 00000000 fe000000 11000000  ................
 0510 00000000 00000000 00000000 00000000  ................
 0520 16020000 12000000 00000000 00000000  ................
 0530 00000000 00000000 5f010000 12000000  ........_.......
 0540 00000000 00000000 00000000 00000000  ................
 0550 f3010000 12000000 00000000 00000000  ................
 0560 00000000 00000000 1f000000 20000000  ............ ...
 0570 00000000 00000000 00000000 00000000  ................
 0580 2d020000 12000000 00000000 00000000  -...............
 0590 00000000 00000000 10000000 20000000  ............ ...
 05a0 00000000 00000000 00000000 00000000  ................
 05b0 3b000000 20000000 00000000 00000000  ;... ...........
 05c0 00000000 00000000 c0000000 12000000  ................
 05d0 00000000 00000000 00000000 00000000  ................
 05e0 1e020000 22000000 00000000 00000000  ...."...........
 05f0 00000000 00000000 b7000000 11001b00  ................
 0600 60460000 00000000 18010000 00000000  `F..............
 0610 b3010000 11001b00 40450000 00000000  ........@E......
 0620 10010000 00000000                    ........        
Contents of section .dynstr:
 0628 006c6962 73746463 2b2b2e73 6f2e3600  .libstdc++.so.6.
 0638 5f5f676d 6f6e5f73 74617274 5f5f005f  __gmon_start__._
 0648 49544d5f 64657265 67697374 6572544d  ITM_deregisterTM
 0658 436c6f6e 65546162 6c65005f 49544d5f  CloneTable._ITM_
 0668 72656769 73746572 544d436c 6f6e6554  registerTMCloneT
 0678 61626c65 005f5a4e 53693130 5f4d5f65  able._ZNSi10_M_e
 0688 78747261 6374496c 45455253 6952545f  xtractIlEERSiRT_
 0698 005f5a4e 53697273 45526c00 5f5a5374  ._ZNSirsERl._ZSt
 06a8 34656e64 6c496353 74313163 6861725f  4endlIcSt11char_
 06b8 74726169 74734963 45455253 74313362  traitsIcEERSt13b
 06c8 61736963 5f6f7374 7265616d 49545f54  asic_ostreamIT_T
 06d8 305f4553 365f005f 5a537433 63696e00  0_ES6_._ZSt3cin.
 06e8 5f5a4e53 7438696f 735f6261 73653449  _ZNSt8ios_base4I
 06f8 6e697444 31457600 5f5a5456 4e31305f  nitD1Ev._ZTVN10_
 0708 5f637878 61626976 3131375f 5f636c61  _cxxabiv117__cla
 0718 73735f74 7970655f 696e666f 45005f5a  ss_type_infoE._Z
 0728 54564e31 305f5f63 78786162 69763132  TVN10__cxxabiv12
 0738 305f5f73 695f636c 6173735f 74797065  0__si_class_type
 0748 5f696e66 6f45005f 5a53746c 73495374  _infoE._ZStlsISt
 0758 31316368 61725f74 72616974 73496345  11char_traitsIcE
 0768 45525374 31336261 7369635f 6f737472  ERSt13basic_ostr
 0778 65616d49 63545f45 53355f50 4b63005f  eamIcT_ES5_PKc._
 0788 5a4e5374 38696f73 5f626173 6534496e  ZNSt8ios_base4In
 0798 69744331 4576005f 5a537472 73496353  itC1Ev._ZStrsIcS
 07a8 74313163 6861725f 74726169 74734963  t11char_traitsIc
 07b8 45455253 74313362 61736963 5f697374  EERSt13basic_ist
 07c8 7265616d 49545f54 305f4553 365f5053  reamIT_T0_ES6_PS
 07d8 335f005f 5a537434 636f7574 006c6962  3_._ZSt4cout.lib
 07e8 632e736f 2e36005f 5f707269 6e74665f  c.so.6.__printf_
 07f8 63686b00 5f5f6973 6f633939 5f737363  chk.__isoc99_ssc
 0808 616e6600 5f5f6973 6f633939 5f736361  anf.__isoc99_sca
 0818 6e660070 75747300 5f5f7374 61636b5f  nf.puts.__stack_
 0828 63686b5f 6661696c 005f5f63 78615f61  chk_fail.__cxa_a
 0838 74657869 74006765 74636861 72005f5f  texit.getchar.__
 0848 6378615f 66696e61 6c697a65 005f5f6c  cxa_finalize.__l
 0858 6962635f 73746172 745f6d61 696e0047  ibc_start_main.G
 0868 4c494243 58585f33 2e342e39 00435858  LIBCXX_3.4.9.CXX
 0878 4142495f 312e3300 474c4942 4358585f  ABI_1.3.GLIBCXX_
 0888 332e3400 474c4942 435f322e 3400474c  3.4.GLIBC_2.4.GL
 0898 4942435f 322e3700 474c4942 435f322e  IBC_2.7.GLIBC_2.
 08a8 322e3500 474c4942 435f322e 332e3400  2.5.GLIBC_2.3.4.
Contents of section .gnu.version:
 08b8 00000200 03000300 03000500 04000600  ................
 08c8 03000700 08000600 04000500 04000300  ................
 08d8 04000000 04000000 00000300 04000300  ................
 08e8 0300                                 ..              
Contents of section .gnu.version_r:
 08f0 01000300 01000000 10000000 40000000  ............@...
 0900 897f2902 00000700 3f020000 10000000  ..).....?.......
 0910 d3af6b05 00000500 4d020000 10000000  ..k.....M.......
 0920 74299208 00000300 58020000 00000000  t)......X.......
 0930 01000400 bd010000 10000000 00000000  ................
 0940 1469690d 00000800 64020000 10000000  .ii.....d.......
 0950 1769690d 00000600 6e020000 10000000  .ii.....n.......
 0960 751a6909 00000400 78020000 10000000  u.i.....x.......
 0970 74196909 00000200 84020000 00000000  t.i.............
Contents of section .rela.dyn:
 0980 603c0000 00000000 08000000 00000000  `<..............
 0990 a0140000 00000000 683c0000 00000000  ........h<......
 09a0 08000000 00000000 90130000 00000000  ................
 09b0 703c0000 00000000 08000000 00000000  p<..............
 09c0 60140000 00000000 803c0000 00000000  `........<......
 09d0 08000000 00000000 083d0000 00000000  .........=......
 09e0 883c0000 00000000 08000000 00000000  .<..............
 09f0 7a150000 00000000 903c0000 00000000  z........<......
 0a00 08000000 00000000 aa140000 00000000  ................
 0a10 983c0000 00000000 08000000 00000000  .<..............
 0a20 1a1e0000 00000000 a03c0000 00000000  .........<......
 0a30 08000000 00000000 2e1e0000 00000000  ................
 0a40 b03c0000 00000000 08000000 00000000  .<..............
 0a50 183d0000 00000000 b83c0000 00000000  .=.......<......
 0a60 08000000 00000000 ba150000 00000000  ................
 0a70 c03c0000 00000000 08000000 00000000  .<..............
 0a80 e0140000 00000000 c83c0000 00000000  .........<......
 0a90 08000000 00000000 341e0000 00000000  ........4.......
 0aa0 d03c0000 00000000 08000000 00000000  .<..............
 0ab0 481e0000 00000000 e03c0000 00000000  H........<......
 0ac0 08000000 00000000 303d0000 00000000  ........0=......
 0ad0 e83c0000 00000000 08000000 00000000  .<..............
 0ae0 fa150000 00000000 f03c0000 00000000  .........<......
 0af0 08000000 00000000 16150000 00000000  ................
 0b00 f83c0000 00000000 08000000 00000000  .<..............
 0b10 4e1e0000 00000000 003d0000 00000000  N........=......
 0b20 08000000 00000000 621e0000 00000000  ........b.......
 0b30 103d0000 00000000 08000000 00000000  .=..............
 0b40 d8210000 00000000 203d0000 00000000  .!...... =......
 0b50 08000000 00000000 e2210000 00000000  .........!......
 0b60 283d0000 00000000 08000000 00000000  (=..............
 0b70 083d0000 00000000 383d0000 00000000  .=......8=......
 0b80 08000000 00000000 e9210000 00000000  .........!......
 0b90 403d0000 00000000 08000000 00000000  @=..............
 0ba0 083d0000 00000000 08400000 00000000  .=.......@......
 0bb0 08000000 00000000 08400000 00000000  .........@......
 0bc0 083d0000 00000000 01000000 05000000  .=..............
 0bd0 10000000 00000000 183d0000 00000000  .........=......
 0be0 01000000 0d000000 10000000 00000000  ................
 0bf0 303d0000 00000000 01000000 0d000000  0=..............
 0c00 10000000 00000000 d03f0000 00000000  .........?......
 0c10 06000000 16000000 00000000 00000000  ................
 0c20 d83f0000 00000000 06000000 11000000  .?..............
 0c30 00000000 00000000 e03f0000 00000000  .........?......
 0c40 06000000 12000000 00000000 00000000  ................
 0c50 e83f0000 00000000 06000000 13000000  .?..............
 0c60 00000000 00000000 f03f0000 00000000  .........?......
 0c70 06000000 14000000 00000000 00000000  ................
 0c80 f83f0000 00000000 06000000 15000000  .?..............
 0c90 00000000 00000000 40450000 00000000  ........@E......
 0ca0 05000000 18000000 00000000 00000000  ................
 0cb0 60460000 00000000 05000000 17000000  `F..............
 0cc0 00000000 00000000                    ........        
Contents of section .rela.plt:
 0cc8 603f0000 00000000 07000000 01000000  `?..............
 0cd8 00000000 00000000 683f0000 00000000  ........h?......
 0ce8 07000000 02000000 00000000 00000000  ................
 0cf8 703f0000 00000000 07000000 03000000  p?..............
 0d08 00000000 00000000 783f0000 00000000  ........x?......
 0d18 07000000 04000000 00000000 00000000  ................
 0d28 803f0000 00000000 07000000 06000000  .?..............
 0d38 00000000 00000000 883f0000 00000000  .........?......
 0d48 07000000 07000000 00000000 00000000  ................
 0d58 903f0000 00000000 07000000 08000000  .?..............
 0d68 00000000 00000000 983f0000 00000000  .........?......
 0d78 07000000 09000000 00000000 00000000  ................
 0d88 a03f0000 00000000 07000000 0a000000  .?..............
 0d98 00000000 00000000 a83f0000 00000000  .........?......
 0da8 07000000 0b000000 00000000 00000000  ................
 0db8 b03f0000 00000000 07000000 0c000000  .?..............
 0dc8 00000000 00000000 b83f0000 00000000  .........?......
 0dd8 07000000 0e000000 00000000 00000000  ................
 0de8 c03f0000 00000000 07000000 0f000000  .?..............
 0df8 00000000 00000000 c83f0000 00000000  .........?......
 0e08 07000000 10000000 00000000 00000000  ................
Contents of section .init:
 1000 f30f1efa 4883ec08 488b05d9 2f000048  ....H...H.../..H
 1010 85c07402 ffd04883 c408c3             ..t...H....     
Contents of section .plt:
 1020 ff352a2f 0000f2ff 252b2f00 000f1f00  .5*/....%+/.....
 1030 f30f1efa 68000000 00f2e9e1 ffffff90  ....h...........
 1040 f30f1efa 68010000 00f2e9d1 ffffff90  ....h...........
 1050 f30f1efa 68020000 00f2e9c1 ffffff90  ....h...........
 1060 f30f1efa 68030000 00f2e9b1 ffffff90  ....h...........
 1070 f30f1efa 68040000 00f2e9a1 ffffff90  ....h...........
 1080 f30f1efa 68050000 00f2e991 ffffff90  ....h...........
 1090 f30f1efa 68060000 00f2e981 ffffff90  ....h...........
 10a0 f30f1efa 68070000 00f2e971 ffffff90  ....h......q....
 10b0 f30f1efa 68080000 00f2e961 ffffff90  ....h......a....
 10c0 f30f1efa 68090000 00f2e951 ffffff90  ....h......Q....
 10d0 f30f1efa 680a0000 00f2e941 ffffff90  ....h......A....
 10e0 f30f1efa 680b0000 00f2e931 ffffff90  ....h......1....
 10f0 f30f1efa 680c0000 00f2e921 ffffff90  ....h......!....
 1100 f30f1efa 680d0000 00f2e911 ffffff90  ....h...........
Contents of section .plt.got:
 1110 f30f1efa f2ff25b5 2e00000f 1f440000  ......%......D..
Contents of section .plt.sec:
 1120 f30f1efa f2ff2535 2e00000f 1f440000  ......%5.....D..
 1130 f30f1efa f2ff252d 2e00000f 1f440000  ......%-.....D..
 1140 f30f1efa f2ff2525 2e00000f 1f440000  ......%%.....D..
 1150 f30f1efa f2ff251d 2e00000f 1f440000  ......%......D..
 1160 f30f1efa f2ff2515 2e00000f 1f440000  ......%......D..
 1170 f30f1efa f2ff250d 2e00000f 1f440000  ......%......D..
 1180 f30f1efa f2ff2505 2e00000f 1f440000  ......%......D..
 1190 f30f1efa f2ff25fd 2d00000f 1f440000  ......%.-....D..
 11a0 f30f1efa f2ff25f5 2d00000f 1f440000  ......%.-....D..
 11b0 f30f1efa f2ff25ed 2d00000f 1f440000  ......%.-....D..
 11c0 f30f1efa f2ff25e5 2d00000f 1f440000  ......%.-....D..
 11d0 f30f1efa f2ff25dd 2d00000f 1f440000  ......%.-....D..
 11e0 f30f1efa f2ff25d5 2d00000f 1f440000  ......%.-....D..
 11f0 f30f1efa f2ff25cd 2d00000f 1f440000  ......%.-....D..
Contents of section .text:
 1200 f30f1efa 4154488d 35cb0e00 00488d3d  ....ATH.5....H.=
 1210 2c330000 554881ec 48030000 64488b04  ,3..UH..H...dH..
 1220 25280000 00488984 24380300 0031c048  %(...H..$8...1.H
 1230 8d6c2418 4989e4e8 44ffffff 4889c7e8  .l$.I...D...H...
 1240 fcfeffff 4889efe8 cc070000 4889efe8  ....H.......H...
 1250 be080000 488d35c0 0e000048 8d3dde32  ....H.5....H.=.2
 1260 0000e819 ffffff48 89c7e8d1 feffff48  .......H.......H
 1270 89efe8a1 07000048 89efe8b9 08000048  .......H.......H
 1280 8d35be0e 0000488d 3db33200 00e8eefe  .5....H.=.2.....
 1290 ffff4889 c7e8a6fe ffff4889 efe87607  ..H.......H...v.
 12a0 00004889 efe8ca08 0000488d 35b10e00  ..H.......H.5...
 12b0 00488d3d 88320000 e8c3feff ff4889c7  .H.=.2.......H..
 12c0 e87bfeff ff4c89e6 488d3d91 330000e8  .{...L..H.=.3...
 12d0 7cfeffff 488b3c24 e8590900 00488d35  |...H.<$.Y...H.5
 12e0 8d0e0000 488d3d55 320000e8 90feffff  ....H.=U2.......
 12f0 4889c7e8 48feffff 4c89e648 8d3d5e33  H...H...L..H.=^3
 1300 0000e889 feffff48 8d742408 4889c7e8  .......H.t$.H...
 1310 7cfeffff 488d7424 104889c7 e82ffeff  |...H.t$.H.../..
 1320 ff488b54 2410488b 74240848 8b3c24e8  .H.T$.H.t$.H.<$.
 1330 30090000 488d355a 0e000048 8d3dfe31  0...H.5Z...H.=.1
 1340 0000e839 feffff48 89c7e8f1 fdffff48  ...9...H.......H
 1350 89ee488d 3d073300 00e8d2fd ffff4889  ..H.=.3.......H.
 1360 efe8a409 0000e833 0a000048 8b842438  .......3...H..$8
 1370 03000064 48330425 28000000 7405e81d  ...dH3.%(...t...
 1380 feffff48 81c44803 000031c0 5d415cc3  ...H..H...1.]A\.
 1390 f30f1efa 50488d3d e4350000 e83ffeff  ....PH.=.5...?..
 13a0 ff488b3d 502c0000 59488d15 582c0000  .H.=P,..YH..X,..
 13b0 488d35c9 350000e9 a4fdffff 0f1f4000  H.5.5.........@.
 13c0 f30f1efa 31ed4989 d15e4889 e24883e4  ....1.I..^H..H..
 13d0 f050544c 8d05060b 0000488d 0d8f0a00  .PTL......H.....
 13e0 00488d3d 18feffff ff15f22b 0000f490  .H.=.......+....
 13f0 488d3d31 31000048 8d052a31 00004839  H.=11..H..*1..H9
 1400 f8741548 8b05ce2b 00004885 c07409ff  .t.H...+..H..t..
 1410 e00f1f80 00000000 c30f1f80 00000000  ................
 1420 488d3d01 31000048 8d35fa30 00004829  H.=.1..H.5.0..H)
 1430 fe4889f0 48c1ee3f 48c1f803 4801c648  .H..H..?H...H..H
 1440 d1fe7414 488b05a5 2b000048 85c07408  ..t.H...+..H..t.
 1450 ffe0660f 1f440000 c30f1f80 00000000  ..f..D..........
 1460 f30f1efa 803d0d33 00000075 2b554883  .....=.3...u+UH.
 1470 3d5a2b00 00004889 e5740c48 8b3d862b  =Z+...H..t.H.=.+
 1480 0000e889 fcffffe8 64ffffff c605e532  ........d......2
 1490 0000015d c30f1f00 c30f1f80 00000000  ...]............
 14a0 f30f1efa e977ffff ff90f30f 1efa5589  .....w........U.
 14b0 d5534889 fb51488b 07ff5010 81fdf00f  .SH..QH...P.....
 14c0 00007515 fec87511 b8ffffff ff48c1e0  ..u...u......H..
 14d0 20488943 08b001eb 0231c05a 5b5dc390   H.C.....1.Z[]..
 14e0 f30f1efa 5589d553 4889fb51 488b07ff  ....U..SH..QH...
 14f0 501081fd 000f0000 7515fec8 7511b8ff  P.......u...u...
 1500 ffffff48 c1e02048 894308b0 01eb0231  ...H.. H.C.....1
 1510 c05a5b5d c390f30f 1efa5589 d5534889  .Z[]......U..SH.
 1520 fb51488b 07ff5010 83fd0f75 15fec875  .QH...P....u...u
 1530 11b8ffff ffff48c1 e0204889 4308b001  ......H.. H.C...
 1540 eb0231c0 5a5b5dc3 41b80100 000085ff  ..1.Z[].A.......
 1550 74235389 fbd1ffe8 ecffffff 4189c044  t#S.........A..D
 1560 0fafc080 e3017408 468d0485 00000000  ......t.F.......
 1570 4489c05b c34489c0 c390f30f 1efa5589  D..[.D........U.
 1580 f5534889 fb51488b 07ff5010 4189c031  .SH..QH...P.A..1
 1590 c04584c0 7520ba01 00000089 d0f08743  .E..u .........C
 15a0 0885c075 f6488b03 4889dfff 5018896b  ...u.H..H...P..k
 15b0 0cb8f00f 00005a5b 5dc3f30f 1efa5589  ......Z[].....U.
 15c0 f5534889 fb51488b 07ff5010 4189c031  .SH..QH...P.A..1
 15d0 c04584c0 7520ba01 00000089 d0f08743  .E..u .........C
 15e0 0885c075 f6488b03 4889dfff 5018896b  ...u.H..H...P..k
 15f0 0cb8000f 00005a5b 5dc3f30f 1efa5589  ......Z[].....U.
 1600 f5534889 fb51488b 07ff5010 4189c031  .SH..QH...P.A..1
 1610 c04584c0 7520ba01 00000089 d0f08743  .E..u .........C
 1620 0885c075 f6488b03 4889dfff 5018896b  ...u.H..H...P..k
 1630 0cb80f00 00005a5b 5dc3f30f 1efa83ef  ......Z[].......
 1640 304080ff 090f96c0 c3f30f1e fa8d57d5  0@............W.
 1650 b00180e2 fd741040 80ff2a0f 94c04080  .....t.@..*...@.
 1660 ff2f0f94 c209d0c3 f30f1efa 8d57d5b8  ./...........W..
 1670 01000000 80e2fd74 144080ff 2a740940  .......t.@..*t.@
 1680 80ff2f74 0331c0c3 b8020000 00c3f30f  ../t.1..........
 1690 1efa488d 056b2d00 00c3f30f 1efa4863  ..H..k-.......Hc
 16a0 0f4c8d0d 58320000 448b0641 55486315  .L..X2..D..AUHc.
 16b0 6c2e0000 4154488d 05c33000 004c8d15  l...ATH...0..L..
 16c0 5c320000 554989cb 486bea0c 53418a0c  \2..UI..Hk..SA..
 16d0 0941ffcb 4c8d0d65 32000048 89d34801  .A..L..e2..H..H.
 16e0 c5884d00 4963c841 803c0a00 450fbe24  ..M.Ic.A.<..E..$
 16f0 09740b44 896504bd 01000000 eb168d4a  .t.D.e.........J
 1700 01894d04 4863c9bd 02000000 486bc90c  ..M.Hc......Hk..
 1710 44882408 41ffc84d 63e04380 3c220047  D.$.A..Mc.C.<".G
 1720 0fbe2c21 740b486b d20c4489 6c1008eb  ..,!t.Hk..D.l...
 1730 18486bd2 0c8d4b02 ffc5894c 10084863  .Hk...K....L..Hc
 1740 c9486bc9 0c44882c 0843881c 215b43c6  .Hk..D.,.C..![C.
 1750 04220144 891f4489 06012dc1 2d00005d  .".D..D...-.-..]
 1760 415c415d c3f30f1e fa415648 8d15ef31  A\A].....AVH...1
 1770 00004155 41545553 4883ec10 64488b04  ..AUATUSH...dH..
 1780 25280000 00488944 240831c0 c7042400  %(...H.D$.1...$.
 1790 000000c7 44240400 000000c7 057b2d00  ....D$.......{-.
 17a0 00010000 0039c67f 16bb0000 000085f6  .....9..........
 17b0 488d2da9 3100000f 48f34863 deeb3d8a  H.-.1...H.Hc..=.
 17c0 0c0748ff c0884c10 ffebda44 8a641d00  ..H...L....D.d..
 17d0 418d4424 d03c0977 2f8b0424 488d155d  A.D$.<.w/..$H..]
 17e0 310000ff c0890424 48984488 2402488d  1......$H.D.$.H.
 17f0 152b3100 00c60402 0048ffcb 85db7fcb  .+1......H......
 1800 4889e6e9 c7000000 4180fc29 75198b44  H.......A..)u..D
 1810 2404488d 15e73000 00ffc089 44240448  $.H...0.....D$.H
 1820 98c60402 29ebd241 80fc2875 2d4c8d25  ....)..A..(u-L.%
 1830 cc300000 48635424 0441803c 14294889  .0..HcT$.A.<.)H.
 1840 d0740f48 89e6488d 7c2404e8 4afeffff  .t.H..H.|$..J...
 1850 ebe2ffc8 89442404 eb9f450f beec4489  .....D$...E...D.
 1860 efe8e3fd ffff84c0 748f4c8d 358f3000  ........t.L.5.0.
 1870 008b4c24 0485c975 14c74424 04010000  ..L$...u..D$....
 1880 00448825 79300000 e96cffff ff4863c1  .D.%y0...l...Hc.
 1890 410fbe3c 064080ff 297413e8 c8fdffff  A..<.@..)t......
 18a0 4489ef89 c6e8befd ffff39c6 7d12ffc1  D.........9.}...
 18b0 894c2404 4863c945 88240ee9 39ffffff  .L$.Hc.E.$..9...
 18c0 4889e648 8d7c2404 e8cdfdff ffeba283  H..H.|$.........
 18d0 7c240400 7e0c488d 7c2404e8 bafdffff  |$..~.H.|$......
 18e0 ebed4863 0424488d 15533000 00480fbe  ..Hc.$H..S0..H..
 18f0 0402488d 15872e00 00486bc0 0c4801d0  ..H......Hk..H..
 1900 488b5c24 08644833 1c252800 00007405  H.\$.dH3.%(...t.
 1910 e88bf8ff ff4883c4 105b5d41 5c415d41  .....H...[]A\A]A
 1920 5ec3f30f 1efa4885 ff0f94c0 4885f60f  ^.....H.....H...
 1930 94c108c8 7542488d 0d432a00 00488d35  ....uBH..C*..H.5
 1940 3c2e0000 31ff39fa 7c31448a 164989c9  <...1.9.|1D..I..
 1950 4989f044 38117525 448b5e04 44395904  I..D8.u%D.^.D9Y.
 1960 751b458b 40084883 c10c4883 c60c4539  u.E.@.H...H...E9
 1970 41087509 ffc7ebce 31c0c3b0 01c3f30f  A.u.....1.......
 1980 1efa5548 8d2df62d 00005348 89fb5280  ..UH.-.-..SH..R.
 1990 3b007433 48637b04 486bff0c 4801efe8  ;.t3Hc{.Hk..H...
 19a0 daffffff 0fbe13bf 01000000 31c0488d  ............1.H.
 19b0 354f0600 00e866f7 ffff4863 5b08486b  5O....f...Hc[.Hk
 19c0 db0c4801 ebebc858 5b5dc3f3 0f1efa55  ..H....X[].....U
 19d0 488d2da9 29000053 4889fb52 803b0074  H.-.)..SH..R.;.t
 19e0 3348637b 04486bff 0c4801ef e8daffff  3Hc{.Hk..H......
 19f0 ff0fbe13 bf010000 0031c048 8d350206  .........1.H.5..
 1a00 0000e819 f7ffff48 635b0848 6bdb0c48  .......Hc[.Hk..H
 1a10 01ebebc8 585b5dc3 f30f1efa 55488daf  ....X[].....UH..
 1a20 20030000 534889fb 52e8a2f7 ffff4839   ...SH..R.....H9
 1a30 eb730c3c 0a740848 ffc38843 ffebeac6  .s.<.t.H...C....
 1a40 0300585b 5dc3f30f 1efa5058 488d3db5  ..X[].....PXH.=.
 1a50 05000050 e897f7ff ff31ffe8 60f7ffff  ...P.....1..`...
 1a60 f30f1efa 31c08a14 0684d274 0c48ffc0  ....1......t.H..
 1a70 3a5407ff 74f031c0 c3b001c3 f30f1efa  :T..t.1.........
 1a80 31c04189 c048ffc0 807c07ff 0075f344  1.A..H...|...u.D
 1a90 89c0c3f3 0f1efa48 83ec1848 8b078954  .......H...H...T
 1aa0 240c8974 24084889 3c24ff10 488b3c24  $..t$.H.<$..H.<$
 1ab0 8b742408 85c08b54 240c7505 e885ffff  .t$....T$.u.....
 1ac0 ff488b07 ff500884 c074f148 83c418c3  .H...P...t.H....
 1ad0 f30f1efa 488d4614 53488d4e 044889f2  ....H.F.SH.N.H..
 1ae0 50488d46 104c8d4e 0c4889f3 504c8d46  PH.F.L.N.H..PL.F
 1af0 0831c048 8d352e05 0000e871 f6ffff5a  .1.H.5.....q...Z
 1b00 5983f806 7505833b 007505e8 36ffffff  Y...u..;.u..6...
 1b10 5bc3f30f 1efa5248 63352225 0000488d  [.....RHc5"%..H.
 1b20 053b2500 004801c6 e833ffff ff84c075  .;%..H...3.....u
 1b30 05e810ff ffff58c3 f30f1efa 52488d35  ......X.....RH.5
 1b40 dc240000 e887ffff ff488d05 d0240000  .$.......H...$..
 1b50 8b0de624 0000488d 50148b30 0faff139  ...$..H.P..0...9
 1b60 70047405 e8ddfeff ff4883c0 044839c2  p.t......H...H9.
 1b70 75e858c3 f30f1efa 4883ec28 488d35b7  u.X.....H..(H.5.
 1b80 04000064 488b0425 28000000 48894424  ...dH..%(...H.D$
 1b90 1831c048 8d4c240f 488d5424 104c8d44  .1.H.L$.H.T$.L.D
 1ba0 2414e8c9 f5ffff83 f8037565 837c2410  $.........ue.|$.
 1bb0 07775e8b 44241048 8d15f605 00004863  .w^.D$.H......Hc
 1bc0 04824801 d03effe0 837c2414 30b07074  ..H..>...|$.0.pt
 1bd0 45eb3e81 7c2414dd 000000b0 627437eb  E.>.|$......bt7.
 1be0 30817c24 14f00200 00b06374 29eb2283  0.|$......ct).".
 1bf0 7c241410 b074741e eb17837c 241403b0  |$...tt....|$...
 1c00 767413eb 0c817c24 14000200 00b07774  vt....|$......wt
 1c10 05e830fe ffff3844 240f75f5 488b4424  ..0...8D$.u.H.D$
 1c20 18644833 04252800 00007405 e86ff5ff  .dH3.%(...t..o..
 1c30 ff4883c4 28c3f30f 1efa4889 f848c1ff  .H..(.....H..H..
 1c40 20528d57 ff83fa0d 7707ffc8 83f80d76   R.W....w......v
 1c50 05e8f0fd ffffe8ed f8ffff3d 00000001  ...........=....
 1c60 75ef58c3 f30f1efa 4883ec48 488d0d45  u.X.....H..HH..E
 1c70 20000064 488b0425 28000000 48894424   ..dH..%(...H.D$
 1c80 3831c048 8d05fe1f 00004889 4c241848  81.H......H.L$.H
 1c90 8d0d5220 00004889 442408b8 ffffffff  ..R ..H.D$......
 1ca0 48c1e020 48894c24 28488944 24104889  H.. H.L$(H.D$.H.
 1cb0 44242048 89442430 4883ff01 7f07488d  D$ H.D$0H.....H.
 1cc0 7c2428eb 264883ff 037f0748 8d7c2418  |$(.&H.....H.|$.
 1cd0 eb194883 ff08488d 7c240875 0ee8b1fd  ..H...H.|$.u....
 1ce0 ffffc605 4f230000 79eb05e8 a3fdffff  ....O#..y.......
 1cf0 488b4424 38644833 04252800 00007405  H.D$8dH3.%(...t.
 1d00 e89bf4ff ff4883c4 48c3f30f 1efa52e8  .....H..H.....R.
 1d10 68fdffff 488d15f0 27000041 89c031c0  h...H...'..A..1.
 1d20 4183f806 7405e81b fdffff8a 0c0748ff  A...t.........H.
 1d30 c0884c10 ff4883f8 0775f0be 11000000  ..L..H...u......
 1d40 488d3db9 270000e8 19faffff ba110000  H.=.'...........
 1d50 00488d3d ac260000 4889c6e8 c2fbffff  .H.=.&..H.......
 1d60 84c074c2 58c3f30f 1efaf348 0f2ac7f3  ..t.X......H.*..
 1d70 0f58c0f3 0f580575 040000f3 0f5ac066  .X...X.u.....Z.f
 1d80 0f2f0571 04000073 0ef20f10 0d6f0400  ./.q...s.....o..
 1d90 00660f2f c8720650 e8a9fcff ffc3f30f  .f./.r.P........
 1da0 1efa4883 ec18488d 3d960200 0064488b  ..H...H.=....dH.
 1db0 04252800 00004889 44240831 c0803d74  .%(...H.D$.1..=t
 1dc0 22000079 7535488d 3db80200 00e81ef4  "..yu5H.=.......
 1dd0 ffff4889 e631c048 8d3de502 000048c7  ..H..1.H.=....H.
 1de0 04240000 0000e8c5 f3ffff48 8b3c24e8  .$.........H.<$.
 1df0 72ffffff 488d3dcc 020000e8 f0f3ffff  r...H.=.........
 1e00 488b4424 08644833 04252800 00007405  H.D$.dH3.%(...t.
 1e10 e88bf3ff ff4883c4 18c3f30f 1efa8b57  .....H.........W
 1e20 0c39f2f7 d20f94c0 c1ea1f21 d0c3f30f  .9.........!....
 1e30 1efac390 f30f1efa 8b570c39 f2f7d20f  .........W.9....
 1e40 94c0c1ea 1f21d0c3 f30f1efa c390f30f  .....!..........
 1e50 1efa8b57 0c39f2f7 d20f94c0 c1ea1f21  ...W.9.........!
 1e60 d0c3f30f 1efac366 0f1f8400 00000000  .......f........
 1e70 f30f1efa 41574c8d 3de31d00 00415649  ....AWL.=....AVI
 1e80 89d64155 4989f541 544189fc 55488d2d  ..AUI..ATA..UH.-
 1e90 dc1d0000 534c29fd 4883ec08 e85ff1ff  ....SL).H...._..
 1ea0 ff48c1fd 03741f31 db0f1f80 00000000  .H...t.1........
 1eb0 4c89f24c 89ee4489 e741ff14 df4883c3  L..L..D..A...H..
 1ec0 014839dd 75ea4883 c4085b5d 415c415d  .H9.u.H...[]A\A]
 1ed0 415e415f c366662e 0f1f8400 00000000  A^A_.ff.........
 1ee0 f30f1efa c3                          .....           
Contents of section .fini:
 1ee8 f30f1efa 4883ec08 4883c408 c3        ....H...H....   
Contents of section .rodata:
 2000 01000200 25632000 0a424f4f 4d212121  ....%c ..BOOM!!!
 2010 0a546865 20626f6d 62206861 7320626c  .The bomb has bl
 2020 6f776e20 75702e00 25642025 64202564  own up..%d %d %d
 2030 20256420 25642025 64002564 20256320   %d %d %d.%d %c 
 2040 25640042 75742069 736e2774 20736f6d  %d.But isn't som
 2050 65746869 6e672e2e 2e206d69 7373696e  ething... missin
 2060 673f2050 65726861 70732073 6f6d6574  g? Perhaps somet
 2070 68696e67 20776173 206f7665 726c6f6f  hing was overloo
 2080 6b65643f 00596f75 27766520 656e7465  ked?.You've ente
 2090 72207468 6520666c 6f617420 706f696e  r the float poin
 20a0 7420776f 726c6421 20497427 73206e6f  t world! It's no
 20b0 74206861 7264206f 282a5e20 5f205e2a  t hard o(*^ _ ^*
 20c0 296d0025 6c640043 6f6e6772 6174756c  )m.%ld.Congratul
 20d0 6174696f 6e732100 596f7520 68617665  ations!.You have
 20e0 20362070 68617365 73207769 74682077   6 phases with w
 20f0 68696368 20746f20 626c6f77 20796f75  hich to blow you
 2100 7273656c 66207570 2e204861 76652061  rself up. Have a
 2110 206e6963 65206461 79210050 68617365   nice day!.Phase
 2120 20312064 65667573 65642e20 486f7720   1 defused. How 
 2130 61626f75 74207468 65206e65 7874206f  about the next o
 2140 6e653f00 54686174 2773206e 756d6265  ne?.That's numbe
 2150 7220322e 20204b65 65702067 6f696e67  r 2.  Keep going
 2160 21004861 6c667761 79207468 65726521  !.Halfway there!
 2170 00536f20 796f7520 676f7420 74686174  .So you got that
 2180 206f6e65 2e202054 72792074 68697320   one.  Try this 
 2190 6f6e652e 00476f6f 6420776f 726b2120  one..Good work! 
 21a0 204f6e20 746f2074 6865206e 6578742e   On to the next.
 21b0 2e2e0000 14faffff 1ffaffff 2dfaffff  ............-...
 21c0 3bfaffff 3bfaffff 3bfaffff 46faffff  ;...;...;...F...
 21d0 51faffff 00000000 38626173 656c6f63  Q.......8baseloc
 21e0 6b00356c 6f636b31 00356c6f 636b3200  k.5lock1.5lock2.
 21f0 00002041 00000000 ef8d2100 00d8ad40  .. A......!....@
 2200 1172deff ffd7ad40                    .r.....@        
Contents of section .eh_frame_hdr:
 2208 011b033b 6c010000 2c000000 18eeffff  ...;l...,.......
 2218 a0010000 08efffff c8010000 18efffff  ................
 2228 e0010000 f8efffff 14060000 88f1ffff  ................
 2238 40060000 b8f1ffff 88010000 a2f2ffff  @...............
 2248 20020000 d8f2ffff 70020000 0ef3ffff   .......p.......
 2258 c0020000 40f3ffff e8020000 72f3ffff  ....@.......r...
 2268 04030000 b2f3ffff 2c030000 f2f3ffff  ........,.......
 2278 54030000 32f4ffff 7c030000 41f4ffff  T...2...|...A...
 2288 90030000 60f4ffff a4030000 86f4ffff  ....`...........
 2298 b8030000 92f4ffff cc030000 5df5ffff  ............]...
 22a8 00040000 1af7ffff 44040000 76f7ffff  ........D...v...
 22b8 58040000 c3f7ffff 80040000 10f8ffff  X...............
 22c8 a8040000 3ef8ffff d0040000 58f8ffff  ....>.......X...
 22d8 ec040000 74f8ffff 00050000 8bf8ffff  ....t...........
 22e8 14050000 c8f8ffff 2c050000 0af9ffff  ........,.......
 22f8 54050000 30f9ffff 6c050000 6cf9ffff  T...0...l...l...
 2308 84050000 2efaffff 9c050000 5cfaffff  ............\...
 2318 b4050000 02fbffff cc050000 5efbffff  ............^...
 2328 e4050000 96fbffff fc050000 12fcffff  ................
 2338 f8010000 26fcffff 0c020000 2cfcffff  ....&.......,...
 2348 48020000 40fcffff 5c020000 46fcffff  H...@...\...F...
 2358 98020000 5afcffff ac020000 68fcffff  ....Z.......h...
 2368 58060000 d8fcffff a0060000           X...........    
Contents of section .eh_frame:
 2378 14000000 00000000 017a5200 01781001  .........zR..x..
 2388 1b0c0708 90010000 14000000 1c000000  ................
 2398 28f0ffff 2f000000 00440710 00000000  (.../....D......
 23a8 24000000 34000000 70ecffff f0000000  $...4...p.......
 23b8 000e1046 0e184a0f 0b770880 003f1a3a  ...F..J..w...?.:
 23c8 2a332422 00000000 14000000 5c000000  *3$"........\...
 23d8 38edffff 10000000 00000000 00000000  8...............
 23e8 14000000 74000000 30edffff e0000000  ....t...0.......
 23f8 00000000 00000000 10000000 8c000000  ................
 2408 12faffff 14000000 00000000 10000000  ................
 2418 a0000000 12faffff 05000000 00000000  ................
 2428 24000000 b4000000 7af0ffff 35000000  $.......z...5...
 2438 00450e10 8602430e 18830344 0e20660e  .E....C....D. f.
 2448 18410e10 410e0800 10000000 dc000000  .A..A...........
 2458 dcf9ffff 14000000 00000000 10000000  ................
 2468 f0000000 dcf9ffff 05000000 00000000  ................
 2478 24000000 04010000 60f0ffff 35000000  $.......`...5...
 2488 00450e10 8602430e 18830344 0e20660e  .E....C....D. f.
 2498 18410e10 410e0800 10000000 2c010000  .A..A.......,...
 24a8 a6f9ffff 14000000 00000000 10000000  ................
 24b8 40010000 a6f9ffff 05000000 00000000  @...............
 24c8 24000000 54010000 46f0ffff 32000000  $...T...F...2...
 24d8 00450e10 8602430e 18830344 0e20630e  .E....C....D. c.
 24e8 18410e10 410e0800 18000000 7c010000  .A..A.......|...
 24f8 50f0ffff 31000000 004b0e10 8302610e  P...1....K....a.
 2508 0841c300 24000000 98010000 66f0ffff  .A..$.......f...
 2518 40000000 00450e10 8602430e 18830344  @....E....C....D
 2528 0e20710e 18410e10 410e0800 24000000  . q..A..A...$...
 2538 c0010000 7ef0ffff 40000000 00450e10  ....~...@....E..
 2548 8602430e 18830344 0e20710e 18410e10  ..C....D. q..A..
 2558 410e0800 24000000 e8010000 96f0ffff  A...$...........
 2568 40000000 00450e10 8602430e 18830344  @....E....C....D
 2578 0e20710e 18410e10 410e0800 10000000  . q..A..A.......
 2588 10020000 aef0ffff 0f000000 00000000  ................
 2598 10000000 24020000 a9f0ffff 1f000000  ....$...........
 25a8 00000000 10000000 38020000 b4f0ffff  ........8.......
 25b8 26000000 00000000 10000000 4c020000  &...........L...
 25c8 c6f0ffff 0c000000 00000000 30000000  ............0...
 25d8 60020000 bef0ffff cb000000 00530e10  `............S..
 25e8 8d02490e 188c034f 0e208604 480e2883  ..I....O. ..H.(.
 25f8 0502810e 20520e18 420e1042 0e080000  .... R..B..B....
 2608 40000000 94020000 55f1ffff bd010000  @.......U.......
 2618 00460e10 8e02490e 188d0342 0e208c04  .F....I....B. ..
 2628 410e2886 05410e30 8306440e 40039d01  A.(..A.0..D.@...
 2638 0e30410e 28410e20 420e1842 0e10420e  .0A.(A. B..B..B.
 2648 08000000 10000000 d8020000 cef2ffff  ................
 2658 5c000000 00000000 24000000 ec020000  \.......$.......
 2668 16f3ffff 4d000000 00450e10 8602480e  ....M....E....H.
 2678 18830344 0e20790e 18410e10 410e0800  ...D. y..A..A...
 2688 24000000 14030000 3bf3ffff 4d000000  $.......;...M...
 2698 00450e10 8602480e 18830344 0e20790e  .E....H....D. y.
 26a8 18410e10 410e0800 24000000 3c030000  .A..A...$...<...
 26b8 60f3ffff 2e000000 00450e10 8602480e  `........E....H.
 26c8 18830344 0e205a0e 18410e10 410e0800  ...D. Z..A..A...
 26d8 18000000 64030000 66f3ffff 1a000000  ....d...f.......
 26e8 00450e10 410e0848 0e100000 10000000  .E..A..H........
 26f8 80030000 64f3ffff 1c000000 00000000  ....d...........
 2708 10000000 94030000 6cf3ffff 17000000  ........l.......
 2718 00000000 14000000 a8030000 6ff3ffff  ............o...
 2728 3d000000 00480e20 740e0800 24000000  =....H. t...$...
 2738 c0030000 94f3ffff 42000000 00490e10  ........B....I..
 2748 8302480e 184c0e20 530e1841 0e10500e  ..H..L. S..A..P.
 2758 08000000 14000000 e8030000 aef3ffff  ................
 2768 26000000 00450e10 600e0800 14000000  &....E..`.......
 2778 00040000 bcf3ffff 3c000000 00450e10  ........<....E..
 2788 760e0800 14000000 18040000 e0f3ffff  v...............
 2798 c2000000 00480e30 02b90e08 14000000  .....H.0........
 27a8 30040000 8af4ffff 2e000000 004c0e10  0............L..
 27b8 610e0800 14000000 48040000 a0f4ffff  a.......H.......
 27c8 a6000000 00480e50 029d0e08 14000000  .....H.P........
 27d8 60040000 2ef5ffff 5c000000 00450e10  `.......\....E..
 27e8 02560e08 14000000 78040000 72f5ffff  .V......x...r...
 27f8 38000000 00720e10 450e0800 14000000  8....r..E.......
 2808 90040000 92f5ffff 7c000000 00480e20  ........|....H. 
 2818 02730e08 28000000 a8040000 dce9ffff  .s..(...........
 2828 90010000 00460e10 8c024f0e 18860347  .....F....O....G
 2838 0ee00603 6e010e18 430e1042 0e080000  ....n...C..B....
 2848 14000000 d4040000 40ebffff 2c000000  ........@...,...
 2858 00450e10 540e0800 44000000 ec040000  .E..T...D.......
 2868 08f6ffff 65000000 00460e10 8f02490e  ....e....F....I.
 2878 188e0345 0e208d04 450e288c 05440e30  ...E. ..E.(..D.0
 2888 8606480e 38830747 0e406e0e 38410e30  ..H.8..G.@n.8A.0
 2898 410e2842 0e20420e 18420e10 420e0800  A.(B. B..B..B...
 28a8 10000000 34050000 30f6ffff 05000000  ....4...0.......
 28b8 00000000 00000000                    ........        
Contents of section .init_array:
 3c60 a0140000 00000000 90130000 00000000  ................
Contents of section .fini_array:
 3c70 60140000 00000000                    `.......        
Contents of section .data.rel.ro:
 3c78 00000000 00000000 083d0000 00000000  .........=......
 3c88 7a150000 00000000 aa140000 00000000  z...............
 3c98 1a1e0000 00000000 2e1e0000 00000000  ................
 3ca8 00000000 00000000 183d0000 00000000  .........=......
 3cb8 ba150000 00000000 e0140000 00000000  ................
 3cc8 341e0000 00000000 481e0000 00000000  4.......H.......
 3cd8 00000000 00000000 303d0000 00000000  ........0=......
 3ce8 fa150000 00000000 16150000 00000000  ................
 3cf8 4e1e0000 00000000 621e0000 00000000  N.......b.......
 3d08 00000000 00000000 d8210000 00000000  .........!......
 3d18 00000000 00000000 e2210000 00000000  .........!......
 3d28 083d0000 00000000 00000000 00000000  .=..............
 3d38 e9210000 00000000 083d0000 00000000  .!.......=......
Contents of section .dynamic:
 3d48 01000000 00000000 01000000 00000000  ................
 3d58 01000000 00000000 bd010000 00000000  ................
 3d68 0c000000 00000000 00100000 00000000  ................
 3d78 0d000000 00000000 e81e0000 00000000  ................
 3d88 19000000 00000000 603c0000 00000000  ........`<......
 3d98 1b000000 00000000 10000000 00000000  ................
 3da8 1a000000 00000000 703c0000 00000000  ........p<......
 3db8 1c000000 00000000 08000000 00000000  ................
 3dc8 f5feff6f 00000000 a0030000 00000000  ...o............
 3dd8 05000000 00000000 28060000 00000000  ........(.......
 3de8 06000000 00000000 d0030000 00000000  ................
 3df8 0a000000 00000000 90020000 00000000  ................
 3e08 0b000000 00000000 18000000 00000000  ................
 3e18 15000000 00000000 00000000 00000000  ................
 3e28 03000000 00000000 483f0000 00000000  ........H?......
 3e38 02000000 00000000 50010000 00000000  ........P.......
 3e48 14000000 00000000 07000000 00000000  ................
 3e58 17000000 00000000 c80c0000 00000000  ................
 3e68 07000000 00000000 80090000 00000000  ................
 3e78 08000000 00000000 48030000 00000000  ........H.......
 3e88 09000000 00000000 18000000 00000000  ................
 3e98 1e000000 00000000 08000000 00000000  ................
 3ea8 fbffff6f 00000000 01000008 00000000  ...o............
 3eb8 feffff6f 00000000 f0080000 00000000  ...o............
 3ec8 ffffff6f 00000000 02000000 00000000  ...o............
 3ed8 f0ffff6f 00000000 b8080000 00000000  ...o............
 3ee8 f9ffff6f 00000000 18000000 00000000  ...o............
 3ef8 00000000 00000000 00000000 00000000  ................
 3f08 00000000 00000000 00000000 00000000  ................
 3f18 00000000 00000000 00000000 00000000  ................
 3f28 00000000 00000000 00000000 00000000  ................
 3f38 00000000 00000000 00000000 00000000  ................
Contents of section .got:
 3f48 483d0000 00000000 00000000 00000000  H=..............
 3f58 00000000 00000000 30100000 00000000  ........0.......
 3f68 40100000 00000000 50100000 00000000  @.......P.......
 3f78 60100000 00000000 70100000 00000000  `.......p.......
 3f88 80100000 00000000 90100000 00000000  ................
 3f98 a0100000 00000000 b0100000 00000000  ................
 3fa8 c0100000 00000000 d0100000 00000000  ................
 3fb8 e0100000 00000000 f0100000 00000000  ................
 3fc8 00110000 00000000 00000000 00000000  ................
 3fd8 00000000 00000000 00000000 00000000  ................
 3fe8 00000000 00000000 00000000 00000000  ................
 3ff8 00000000 00000000                    ........        
Contents of section .data:
 4000 00000000 00000000 08400000 00000000  .........@......
 4010 00000000 00000000 00000000 00000000  ................
 4020 02000000 04000000 08000000 10000000  ................
 4030 20000000 40000000 00000000 fdffffff   ...@...........
 4040 e6000000 00000000 00000000 00000000  ................
 4050 00000000 00000000 00000000 00000000  ................
 4060 54686973 20746578 7420696e 74726f64  This text introd
 4070 75636564 20746865 206d6169 6e206964  uced the main id
 4080 65617320 696e206f 70657261 74696e67  eas in operating
 4090 20737973 74656d73 20627920 73747564   systems by stud
 40a0 79696e67 206f6e65 206f7065 72617469  ying one operati
 40b0 6e672073 79737465 6d000000 7876362c  ng system...xv6,
 40c0 206c696e 65206279 206c696e 65002053   line by line. S
 40d0 6f6d6520 636f6465 206c696e 65732065  ome code lines e
 40e0 6d626f64 79207468 65206573 73656e63  mbody the essenc
 40f0 65206f66 20746865 206d6169 6e206964  e of the main id
 4100 65617300 20286500 67002c20 636f6e74  eas. (e.g., cont
 4110 65787420 73776974 6368696e 672c2075  ext switching, u
 4120 7365722f 6b65726e 656c2062 6f756e64  ser/kernel bound
 4130 6172792c 206c6f63 6b732c20 65746300  ary, locks, etc.
 4140 2920616e 64206561 6368206c 696e6520  ) and each line 
 4150 69732069 6d706f72 74616e74 00206f74  is important. ot
 4160 68657220 636f6465 206c696e 65732070  her code lines p
 4170 726f7669 64652061 6e20696c 6c757374  rovide an illust
 4180 72617469 6f6e206f 6620686f 7720746f  ration of how to
 4190 20696d70 6c656d65 6e742061 20706172   implement a par
 41a0 74696375 6c617220 6f706572 6174696e  ticular operatin
 41b0 67207379 7374656d 20696465 6120616e  g system idea an
 41c0 6420636f 756c6420 65617369 6c792062  d could easily b
 41d0 6520646f 6e652069 6e206469 66666572  e done in differ
 41e0 656e7420 77617973 20286500 67002c20  ent ways (e.g., 
 41f0 61206265 74746572 20616c67 6f726974  a better algorit
 4200 686d2066 6f722073 63686564 756c696e  hm for schedulin
 4210 672c2062 65747465 72206f6e 2d646973  g, better on-dis
 4220 6b206461 74612073 74727563 74757265  k data structure
 4230 7320746f 20726570 72657365 6e742066  s to represent f
 4240 696c6573 2c206265 74746572 206c6f67  iles, better log
 4250 67696e67 20746f20 616c6c6f 7720666f  ging to allow fo
 4260 7220636f 6e637572 72656e74 20747261  r concurrent tra
 4270 6e736163 74696f6e 732c2065 74630029  nsactions, etc.)
 4280 0020416c 6c207468 65206964 65617320  . All the ideas 
 4290 77657265 20696c6c 75737472 61746564  were illustrated
 42a0 20696e20 74686520 636f6e74 65787420   in the context 
 42b0 6f66206f 6e652070 61727469 63756c61  of one particula
 42c0 722c2076 65727920 73756363 65737366  r, very successf
 42d0 756c2073 79737465 6d206361 6c6c2069  ul system call i
 42e0 6e746572 66616365 2c207468 6520556e  nterface, the Un
 42f0 69782069 6e746572 66616365 2c206275  ix interface, bu
 4300 74207468 6f736520 69646561 73206361  t those ideas ca
 4310 72727920 6f766572 20746f20 74686520  rry over to the 
 4320 64657369 676e206f 66206f74 68657220  design of other 
 4330 6f706572 6174696e 67207379 7374656d  operating system
 4340 73002054 68652078 76362063 6f646520  s. The xv6 code 
 4350 69732061 20737562 73657420 6f662074  is a subset of t
 4360 68652055 6e697820 636f6465 00000000  he Unix code....
 4370 00000000 00000000 00000000 00000000  ................
 4380 00000000 00000000 00000000 2d000000  ............-...
 4390 02000000 03000000 33000000 00000000  ........3.......
 43a0 00000000 34000000 00000000 00000000  ....4...........
 43b0 2d000000 05000000 06000000 39000000  -...........9...
 43c0 00000000 00000000 30000000 00000000  ........0.......
 43d0 00000000 2f000000 04000000 01000000  ..../...........
 43e0 2b000000 09000000 0a000000 31000000  +...........1...
 43f0 00000000 00000000 32000000 00000000  ........2.......
 4400 00000000 2a000000 08000000 07000000  ....*...........
 4410 00000000 00000000 00000000 00000000  ................
 4420 00000000 00000000 00000000 00000000  ................
 4430 00000000 00000000 00000000 00000000  ................
 4440 00000000 00000000 00000000 00000000  ................
 4450 00000000 00000000 00000000 00000000  ................
 4460 00000000 00000000 00000000 00000000  ................
 4470 00000000 00000000 00000000 00000000  ................
 4480 00000000 00000000 00000000 00000000  ................
 4490 00000000 00000000 00000000 00000000  ................
 44a0 00000000 00000000 00000000 00000000  ................
 44b0 00000000 00000000 00000000 00000000  ................
 44c0 00000000 00000000 00000000 00000000  ................
 44d0 00000000 00000000 00000000 00000000  ................
 44e0 00000000 00000000 00000000 00000000  ................
 44f0 00000000 00000000 00000000 00000000  ................
 4500 28312b32 292a2839 2d302900 00000000  (1+2)*(9-0).....
 4510 00000000 00000000 00000000 00000000  ................
 4520 01000000                             ....            
Contents of section .comment:
 0000 4743433a 20285562 756e7475 20392e34  GCC: (Ubuntu 9.4
 0010 2e302d31 7562756e 7475317e 32302e30  .0-1ubuntu1~20.0
 0020 342e3129 20392e34 2e3000             4.1) 9.4.0.     

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	endbr64 
    1004:	sub    $0x8,%rsp
    1008:	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	test   %rax,%rax
    1012:	je     1016 <_init+0x16>
    1014:	callq  *%rax
    1016:	add    $0x8,%rsp
    101a:	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	pushq  0x2f2a(%rip)        # 3f50 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	bnd jmpq *0x2f2b(%rip)        # 3f58 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	nopl   (%rax)
    1030:	endbr64 
    1034:	pushq  $0x0
    1039:	bnd jmpq 1020 <.plt>
    103f:	nop
    1040:	endbr64 
    1044:	pushq  $0x1
    1049:	bnd jmpq 1020 <.plt>
    104f:	nop
    1050:	endbr64 
    1054:	pushq  $0x2
    1059:	bnd jmpq 1020 <.plt>
    105f:	nop
    1060:	endbr64 
    1064:	pushq  $0x3
    1069:	bnd jmpq 1020 <.plt>
    106f:	nop
    1070:	endbr64 
    1074:	pushq  $0x4
    1079:	bnd jmpq 1020 <.plt>
    107f:	nop
    1080:	endbr64 
    1084:	pushq  $0x5
    1089:	bnd jmpq 1020 <.plt>
    108f:	nop
    1090:	endbr64 
    1094:	pushq  $0x6
    1099:	bnd jmpq 1020 <.plt>
    109f:	nop
    10a0:	endbr64 
    10a4:	pushq  $0x7
    10a9:	bnd jmpq 1020 <.plt>
    10af:	nop
    10b0:	endbr64 
    10b4:	pushq  $0x8
    10b9:	bnd jmpq 1020 <.plt>
    10bf:	nop
    10c0:	endbr64 
    10c4:	pushq  $0x9
    10c9:	bnd jmpq 1020 <.plt>
    10cf:	nop
    10d0:	endbr64 
    10d4:	pushq  $0xa
    10d9:	bnd jmpq 1020 <.plt>
    10df:	nop
    10e0:	endbr64 
    10e4:	pushq  $0xb
    10e9:	bnd jmpq 1020 <.plt>
    10ef:	nop
    10f0:	endbr64 
    10f4:	pushq  $0xc
    10f9:	bnd jmpq 1020 <.plt>
    10ff:	nop
    1100:	endbr64 
    1104:	pushq  $0xd
    1109:	bnd jmpq 1020 <.plt>
    110f:	nop

Disassembly of section .plt.got:

0000000000001110 <__cxa_finalize@plt>:
    1110:	endbr64 
    1114:	bnd jmpq *0x2eb5(%rip)        # 3fd0 <__cxa_finalize@GLIBC_2.2.5>
    111b:	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001120 <__printf_chk@plt>:
    1120:	endbr64 
    1124:	bnd jmpq *0x2e35(%rip)        # 3f60 <__printf_chk@GLIBC_2.3.4>
    112b:	nopl   0x0(%rax,%rax,1)

0000000000001130 <std::basic_istream<char, std::char_traits<char> >& std::operator>><char, std::char_traits<char> >(std::basic_istream<char, std::char_traits<char> >&, char*)@plt>:
    1130:	endbr64 
    1134:	bnd jmpq *0x2e2d(%rip)        # 3f68 <std::basic_istream<char, std::char_traits<char> >& std::operator>><char, std::char_traits<char> >(std::basic_istream<char, std::char_traits<char> >&, char*)@GLIBCXX_3.4>
    113b:	nopl   0x0(%rax,%rax,1)

0000000000001140 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>:
    1140:	endbr64 
    1144:	bnd jmpq *0x2e25(%rip)        # 3f70 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@GLIBCXX_3.4>
    114b:	nopl   0x0(%rax,%rax,1)

0000000000001150 <std::istream::operator>>(long&)@plt>:
    1150:	endbr64 
    1154:	bnd jmpq *0x2e1d(%rip)        # 3f78 <std::istream::operator>>(long&)@GLIBCXX_3.4>
    115b:	nopl   0x0(%rax,%rax,1)

0000000000001160 <__cxa_atexit@plt>:
    1160:	endbr64 
    1164:	bnd jmpq *0x2e15(%rip)        # 3f80 <__cxa_atexit@GLIBC_2.2.5>
    116b:	nopl   0x0(%rax,%rax,1)

0000000000001170 <__isoc99_sscanf@plt>:
    1170:	endbr64 
    1174:	bnd jmpq *0x2e0d(%rip)        # 3f88 <__isoc99_sscanf@GLIBC_2.7>
    117b:	nopl   0x0(%rax,%rax,1)

0000000000001180 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>:
    1180:	endbr64 
    1184:	bnd jmpq *0x2e05(%rip)        # 3f90 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@GLIBCXX_3.4>
    118b:	nopl   0x0(%rax,%rax,1)

0000000000001190 <std::istream& std::istream::_M_extract<long>(long&)@plt>:
    1190:	endbr64 
    1194:	bnd jmpq *0x2dfd(%rip)        # 3f98 <std::istream& std::istream::_M_extract<long>(long&)@GLIBCXX_3.4.9>
    119b:	nopl   0x0(%rax,%rax,1)

00000000000011a0 <__stack_chk_fail@plt>:
    11a0:	endbr64 
    11a4:	bnd jmpq *0x2df5(%rip)        # 3fa0 <__stack_chk_fail@GLIBC_2.4>
    11ab:	nopl   0x0(%rax,%rax,1)

00000000000011b0 <__isoc99_scanf@plt>:
    11b0:	endbr64 
    11b4:	bnd jmpq *0x2ded(%rip)        # 3fa8 <__isoc99_scanf@GLIBC_2.7>
    11bb:	nopl   0x0(%rax,%rax,1)

00000000000011c0 <exit@plt>:
    11c0:	endbr64 
    11c4:	bnd jmpq *0x2de5(%rip)        # 3fb0 <exit@GLIBC_2.2.5>
    11cb:	nopl   0x0(%rax,%rax,1)

00000000000011d0 <getchar@plt>:
    11d0:	endbr64 
    11d4:	bnd jmpq *0x2ddd(%rip)        # 3fb8 <getchar@GLIBC_2.2.5>
    11db:	nopl   0x0(%rax,%rax,1)

00000000000011e0 <std::ios_base::Init::Init()@plt>:
    11e0:	endbr64 
    11e4:	bnd jmpq *0x2dd5(%rip)        # 3fc0 <std::ios_base::Init::Init()@GLIBCXX_3.4>
    11eb:	nopl   0x0(%rax,%rax,1)

00000000000011f0 <puts@plt>:
    11f0:	endbr64 
    11f4:	bnd jmpq *0x2dcd(%rip)        # 3fc8 <puts@GLIBC_2.2.5>
    11fb:	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001200 <main>:
    1200:	endbr64 
    1204:	push   %r12
    1206:	lea    0xecb(%rip),%rsi        # 20d8 <_IO_stdin_used+0xd8>
    120d:	lea    0x332c(%rip),%rdi        # 4540 <std::cout@@GLIBCXX_3.4>
    1214:	push   %rbp
    1215:	sub    $0x348,%rsp
    121c:	mov    %fs:0x28,%rax
    1225:	mov    %rax,0x338(%rsp)
    122d:	xor    %eax,%eax
    122f:	lea    0x18(%rsp),%rbp
    1234:	mov    %rsp,%r12
    1237:	callq  1180 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
    123c:	mov    %rax,%rdi
    123f:	callq  1140 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    1244:	mov    %rbp,%rdi
    1247:	callq  1a18 <read_line(char*)>
    124c:	mov    %rbp,%rdi
    124f:	callq  1b12 <phase_1(char*)>
    1254:	lea    0xec0(%rip),%rsi        # 211b <_IO_stdin_used+0x11b>
    125b:	lea    0x32de(%rip),%rdi        # 4540 <std::cout@@GLIBCXX_3.4>
    1262:	callq  1180 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
    1267:	mov    %rax,%rdi
    126a:	callq  1140 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    126f:	mov    %rbp,%rdi
    1272:	callq  1a18 <read_line(char*)>
    1277:	mov    %rbp,%rdi
    127a:	callq  1b38 <phase_2(char*)>
    127f:	lea    0xebe(%rip),%rsi        # 2144 <_IO_stdin_used+0x144>
    1286:	lea    0x32b3(%rip),%rdi        # 4540 <std::cout@@GLIBCXX_3.4>
    128d:	callq  1180 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
    1292:	mov    %rax,%rdi
    1295:	callq  1140 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    129a:	mov    %rbp,%rdi
    129d:	callq  1a18 <read_line(char*)>
    12a2:	mov    %rbp,%rdi
    12a5:	callq  1b74 <phase_3(char*)>
    12aa:	lea    0xeb1(%rip),%rsi        # 2162 <_IO_stdin_used+0x162>
    12b1:	lea    0x3288(%rip),%rdi        # 4540 <std::cout@@GLIBCXX_3.4>
    12b8:	callq  1180 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
    12bd:	mov    %rax,%rdi
    12c0:	callq  1140 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    12c5:	mov    %r12,%rsi
    12c8:	lea    0x3391(%rip),%rdi        # 4660 <std::cin@@GLIBCXX_3.4>
    12cf:	callq  1150 <std::istream::operator>>(long&)@plt>
    12d4:	mov    (%rsp),%rdi
    12d8:	callq  1c36 <phase_4(long)>
    12dd:	lea    0xe8d(%rip),%rsi        # 2171 <_IO_stdin_used+0x171>
    12e4:	lea    0x3255(%rip),%rdi        # 4540 <std::cout@@GLIBCXX_3.4>
    12eb:	callq  1180 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
    12f0:	mov    %rax,%rdi
    12f3:	callq  1140 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    12f8:	mov    %r12,%rsi
    12fb:	lea    0x335e(%rip),%rdi        # 4660 <std::cin@@GLIBCXX_3.4>
    1302:	callq  1190 <std::istream& std::istream::_M_extract<long>(long&)@plt>
    1307:	lea    0x8(%rsp),%rsi
    130c:	mov    %rax,%rdi
    130f:	callq  1190 <std::istream& std::istream::_M_extract<long>(long&)@plt>
    1314:	lea    0x10(%rsp),%rsi
    1319:	mov    %rax,%rdi
    131c:	callq  1150 <std::istream::operator>>(long&)@plt>
    1321:	mov    0x10(%rsp),%rdx
    1326:	mov    0x8(%rsp),%rsi
    132b:	mov    (%rsp),%rdi
    132f:	callq  1c64 <phase_5(long, long, long)>
    1334:	lea    0xe5a(%rip),%rsi        # 2195 <_IO_stdin_used+0x195>
    133b:	lea    0x31fe(%rip),%rdi        # 4540 <std::cout@@GLIBCXX_3.4>
    1342:	callq  1180 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
    1347:	mov    %rax,%rdi
    134a:	callq  1140 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    134f:	mov    %rbp,%rsi
    1352:	lea    0x3307(%rip),%rdi        # 4660 <std::cin@@GLIBCXX_3.4>
    1359:	callq  1130 <std::basic_istream<char, std::char_traits<char> >& std::operator>><char, std::char_traits<char> >(std::basic_istream<char, std::char_traits<char> >&, char*)@plt>
    135e:	mov    %rbp,%rdi
    1361:	callq  1d0a <phase_6(char*)>
    1366:	callq  1d9e <congratulations()>
    136b:	mov    0x338(%rsp),%rax
    1373:	xor    %fs:0x28,%rax
    137c:	je     1383 <main+0x183>
    137e:	callq  11a0 <__stack_chk_fail@plt>
    1383:	add    $0x348,%rsp
    138a:	xor    %eax,%eax
    138c:	pop    %rbp
    138d:	pop    %r12
    138f:	retq   

0000000000001390 <_GLOBAL__sub_I__ZN8baselock7acquireEi>:
    1390:	endbr64 
    1394:	push   %rax
    1395:	lea    0x35e4(%rip),%rdi        # 4980 <std::__ioinit>
    139c:	callq  11e0 <std::ios_base::Init::Init()@plt>
    13a1:	mov    0x2c50(%rip),%rdi        # 3ff8 <std::ios_base::Init::~Init()@GLIBCXX_3.4>
    13a8:	pop    %rcx
    13a9:	lea    0x2c58(%rip),%rdx        # 4008 <__dso_handle>
    13b0:	lea    0x35c9(%rip),%rsi        # 4980 <std::__ioinit>
    13b7:	jmpq   1160 <__cxa_atexit@plt>
    13bc:	nopl   0x0(%rax)

00000000000013c0 <_start>:
    13c0:	endbr64 
    13c4:	xor    %ebp,%ebp
    13c6:	mov    %rdx,%r9
    13c9:	pop    %rsi
    13ca:	mov    %rsp,%rdx
    13cd:	and    $0xfffffffffffffff0,%rsp
    13d1:	push   %rax
    13d2:	push   %rsp
    13d3:	lea    0xb06(%rip),%r8        # 1ee0 <__libc_csu_fini>
    13da:	lea    0xa8f(%rip),%rcx        # 1e70 <__libc_csu_init>
    13e1:	lea    -0x1e8(%rip),%rdi        # 1200 <main>
    13e8:	callq  *0x2bf2(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    13ee:	hlt    
    13ef:	nop

00000000000013f0 <deregister_tm_clones>:
    13f0:	lea    0x3131(%rip),%rdi        # 4528 <__TMC_END__>
    13f7:	lea    0x312a(%rip),%rax        # 4528 <__TMC_END__>
    13fe:	cmp    %rdi,%rax
    1401:	je     1418 <deregister_tm_clones+0x28>
    1403:	mov    0x2bce(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    140a:	test   %rax,%rax
    140d:	je     1418 <deregister_tm_clones+0x28>
    140f:	jmpq   *%rax
    1411:	nopl   0x0(%rax)
    1418:	retq   
    1419:	nopl   0x0(%rax)

0000000000001420 <register_tm_clones>:
    1420:	lea    0x3101(%rip),%rdi        # 4528 <__TMC_END__>
    1427:	lea    0x30fa(%rip),%rsi        # 4528 <__TMC_END__>
    142e:	sub    %rdi,%rsi
    1431:	mov    %rsi,%rax
    1434:	shr    $0x3f,%rsi
    1438:	sar    $0x3,%rax
    143c:	add    %rax,%rsi
    143f:	sar    %rsi
    1442:	je     1458 <register_tm_clones+0x38>
    1444:	mov    0x2ba5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    144b:	test   %rax,%rax
    144e:	je     1458 <register_tm_clones+0x38>
    1450:	jmpq   *%rax
    1452:	nopw   0x0(%rax,%rax,1)
    1458:	retq   
    1459:	nopl   0x0(%rax)

0000000000001460 <__do_global_dtors_aux>:
    1460:	endbr64 
    1464:	cmpb   $0x0,0x330d(%rip)        # 4778 <completed.8061>
    146b:	jne    1498 <__do_global_dtors_aux+0x38>
    146d:	push   %rbp
    146e:	cmpq   $0x0,0x2b5a(%rip)        # 3fd0 <__cxa_finalize@GLIBC_2.2.5>
    1476:	mov    %rsp,%rbp
    1479:	je     1487 <__do_global_dtors_aux+0x27>
    147b:	mov    0x2b86(%rip),%rdi        # 4008 <__dso_handle>
    1482:	callq  1110 <__cxa_finalize@plt>
    1487:	callq  13f0 <deregister_tm_clones>
    148c:	movb   $0x1,0x32e5(%rip)        # 4778 <completed.8061>
    1493:	pop    %rbp
    1494:	retq   
    1495:	nopl   (%rax)
    1498:	retq   
    1499:	nopl   0x0(%rax)

00000000000014a0 <frame_dummy>:
    14a0:	endbr64 
    14a4:	jmpq   1420 <register_tm_clones>
    14a9:	nop

00000000000014aa <baselock::release(int, int)>:
    14aa:	endbr64 
    14ae:	push   %rbp
    14af:	mov    %edx,%ebp
    14b1:	push   %rbx
    14b2:	mov    %rdi,%rbx
    14b5:	push   %rcx
    14b6:	mov    (%rdi),%rax
    14b9:	callq  *0x10(%rax)
    14bc:	cmp    $0xff0,%ebp
    14c2:	jne    14d9 <baselock::release(int, int)+0x2f>
    14c4:	dec    %al
    14c6:	jne    14d9 <baselock::release(int, int)+0x2f>
    14c8:	mov    $0xffffffff,%eax
    14cd:	shl    $0x20,%rax
    14d1:	mov    %rax,0x8(%rbx)
    14d5:	mov    $0x1,%al
    14d7:	jmp    14db <baselock::release(int, int)+0x31>
    14d9:	xor    %eax,%eax
    14db:	pop    %rdx
    14dc:	pop    %rbx
    14dd:	pop    %rbp
    14de:	retq   
    14df:	nop

00000000000014e0 <lock1::release(int, int)>:
    14e0:	endbr64 
    14e4:	push   %rbp
    14e5:	mov    %edx,%ebp
    14e7:	push   %rbx
    14e8:	mov    %rdi,%rbx
    14eb:	push   %rcx
    14ec:	mov    (%rdi),%rax
    14ef:	callq  *0x10(%rax)
    14f2:	cmp    $0xf00,%ebp
    14f8:	jne    150f <lock1::release(int, int)+0x2f>
    14fa:	dec    %al
    14fc:	jne    150f <lock1::release(int, int)+0x2f>
    14fe:	mov    $0xffffffff,%eax
    1503:	shl    $0x20,%rax
    1507:	mov    %rax,0x8(%rbx)
    150b:	mov    $0x1,%al
    150d:	jmp    1511 <lock1::release(int, int)+0x31>
    150f:	xor    %eax,%eax
    1511:	pop    %rdx
    1512:	pop    %rbx
    1513:	pop    %rbp
    1514:	retq   
    1515:	nop

0000000000001516 <lock2::release(int, int)>:
    1516:	endbr64 
    151a:	push   %rbp
    151b:	mov    %edx,%ebp
    151d:	push   %rbx
    151e:	mov    %rdi,%rbx
    1521:	push   %rcx
    1522:	mov    (%rdi),%rax
    1525:	callq  *0x10(%rax)
    1528:	cmp    $0xf,%ebp
    152b:	jne    1542 <lock2::release(int, int)+0x2c>
    152d:	dec    %al
    152f:	jne    1542 <lock2::release(int, int)+0x2c>
    1531:	mov    $0xffffffff,%eax
    1536:	shl    $0x20,%rax
    153a:	mov    %rax,0x8(%rbx)
    153e:	mov    $0x1,%al
    1540:	jmp    1544 <lock2::release(int, int)+0x2e>
    1542:	xor    %eax,%eax
    1544:	pop    %rdx
    1545:	pop    %rbx
    1546:	pop    %rbp
    1547:	retq   

0000000000001548 <hope(int)>:
    1548:	mov    $0x1,%r8d
    154e:	test   %edi,%edi
    1550:	je     1575 <hope(int)+0x2d>
    1552:	push   %rbx
    1553:	mov    %edi,%ebx
    1555:	sar    %edi
    1557:	callq  1548 <hope(int)>
    155c:	mov    %eax,%r8d
    155f:	imul   %eax,%r8d
    1563:	and    $0x1,%bl
    1566:	je     1570 <hope(int)+0x28>
    1568:	lea    0x0(,%r8,4),%r8d
    1570:	mov    %r8d,%eax
    1573:	pop    %rbx
    1574:	retq   
    1575:	mov    %r8d,%eax
    1578:	retq   
    1579:	nop

000000000000157a <baselock::acquire(int)>:
    157a:	endbr64 
    157e:	push   %rbp
    157f:	mov    %esi,%ebp
    1581:	push   %rbx
    1582:	mov    %rdi,%rbx
    1585:	push   %rcx
    1586:	mov    (%rdi),%rax
    1589:	callq  *0x10(%rax)  # baselock::is_hoding
    158c:	mov    %eax,%r8d
    158f:	xor    %eax,%eax
    1591:	test   %r8b,%r8b
    1594:	jne    15b6 <baselock::acquire(int)+0x3c>
    1596:	mov    $0x1,%edx
    159b:	mov    %edx,%eax
    159d:	lock xchg %eax,0x8(%rbx)
    15a1:	test   %eax,%eax
    15a3:	jne    159b <baselock::acquire(int)+0x21>
    15a5:	mov    (%rbx),%rax
    15a8:	mov    %rbx,%rdi
    15ab:	callq  *0x18(%rax)
    15ae:	mov    %ebp,0xc(%rbx)
    15b1:	mov    $0xff0,%eax
    15b6:	pop    %rdx
    15b7:	pop    %rbx
    15b8:	pop    %rbp
    15b9:	retq   

00000000000015ba <lock1::acquire(int)>:
    15ba:	endbr64 
    15be:	push   %rbp
    15bf:	mov    %esi,%ebp
    15c1:	push   %rbx
    15c2:	mov    %rdi,%rbx
    15c5:	push   %rcx
    15c6:	mov    (%rdi),%rax
    15c9:	callq  *0x10(%rax)
    15cc:	mov    %eax,%r8d
    15cf:	xor    %eax,%eax
    15d1:	test   %r8b,%r8b
    15d4:	jne    15f6 <lock1::acquire(int)+0x3c>
    15d6:	mov    $0x1,%edx
    15db:	mov    %edx,%eax
    15dd:	lock xchg %eax,0x8(%rbx)
    15e1:	test   %eax,%eax
    15e3:	jne    15db <lock1::acquire(int)+0x21>
    15e5:	mov    (%rbx),%rax
    15e8:	mov    %rbx,%rdi
    15eb:	callq  *0x18(%rax)
    15ee:	mov    %ebp,0xc(%rbx)
    15f1:	mov    $0xf00,%eax
    15f6:	pop    %rdx
    15f7:	pop    %rbx
    15f8:	pop    %rbp
    15f9:	retq   

00000000000015fa <lock2::acquire(int)>:
    15fa:	endbr64 
    15fe:	push   %rbp
    15ff:	mov    %esi,%ebp
    1601:	push   %rbx
    1602:	mov    %rdi,%rbx
    1605:	push   %rcx
    1606:	mov    (%rdi),%rax
    1609:	callq  *0x10(%rax)
    160c:	mov    %eax,%r8d
    160f:	xor    %eax,%eax
    1611:	test   %r8b,%r8b
    1614:	jne    1636 <lock2::acquire(int)+0x3c>
    1616:	mov    $0x1,%edx
    161b:	mov    %edx,%eax
    161d:	lock xchg %eax,0x8(%rbx)
    1621:	test   %eax,%eax
    1623:	jne    161b <lock2::acquire(int)+0x21>
    1625:	mov    (%rbx),%rax
    1628:	mov    %rbx,%rdi
    162b:	callq  *0x18(%rax)
    162e:	mov    %ebp,0xc(%rbx)
    1631:	mov    $0xf,%eax
    1636:	pop    %rdx
    1637:	pop    %rbx
    1638:	pop    %rbp
    1639:	retq   

000000000000163a <is_digit(char)>:
    163a:	endbr64 
    163e:	sub    $0x30,%edi
    1641:	cmp    $0x9,%dil
    1645:	setbe  %al
    1648:	retq   

0000000000001649 <is_op(char)>:
    1649:	endbr64 
    164d:	lea    -0x2b(%rdi),%edx
    1650:	mov    $0x1,%al
    1652:	and    $0xfd,%dl
    1655:	je     1667 <is_op(char)+0x1e>
    1657:	cmp    $0x2a,%dil
    165b:	sete   %al
    165e:	cmp    $0x2f,%dil
    1662:	sete   %dl
    1665:	or     %edx,%eax
    1667:	retq   

0000000000001668 <priority(char)>:
    1668:	endbr64 
    166c:	lea    -0x2b(%rdi),%edx
    166f:	mov    $0x1,%eax
    1674:	and    $0xfd,%dl
    1677:	je     168d <priority(char)+0x25>
    1679:	cmp    $0x2a,%dil
    167d:	je     1688 <priority(char)+0x20>
    167f:	cmp    $0x2f,%dil
    1683:	je     1688 <priority(char)+0x20>
    1685:	xor    %eax,%eax
    1687:	retq   
    1688:	mov    $0x2,%eax
    168d:	retq   

000000000000168e <build_answer_expression_tree()>:
    168e:	endbr64 
    1692:	lea    0x2d6b(%rip),%rax        # 4404 <ans+0x84>
    1699:	retq   

000000000000169a <attach_node(int*, int*)>:
    169a:	endbr64 
    169e:	movslq (%rdi),%rcx
    16a1:	lea    0x3258(%rip),%r9        # 4900 <op_stack>
    16a8:	mov    (%rsi),%r8d
    16ab:	push   %r13
    16ad:	movslq 0x2e6c(%rip),%rdx        # 4520 <cand_node_idx>
    16b4:	push   %r12
    16b6:	lea    0x30c3(%rip),%rax        # 4780 <cand>
    16bd:	lea    0x325c(%rip),%r10        # 4920 <flag_stack>
    16c4:	push   %rbp
    16c5:	mov    %rcx,%r11
    16c8:	imul   $0xc,%rdx,%rbp
    16cc:	push   %rbx
    16cd:	mov    (%r9,%rcx,1),%cl
    16d1:	dec    %r11d
    16d4:	lea    0x3265(%rip),%r9        # 4940 <digit_stack>
    16db:	mov    %rdx,%rbx
    16de:	add    %rax,%rbp
    16e1:	mov    %cl,0x0(%rbp)
    16e4:	movslq %r8d,%rcx
    16e7:	cmpb   $0x0,(%r10,%rcx,1)
    16ec:	movsbl (%r9,%rcx,1),%r12d
    16f1:	je     16fe <attach_node(int*, int*)+0x64>
    16f3:	mov    %r12d,0x4(%rbp)
    16f7:	mov    $0x1,%ebp
    16fc:	jmp    1714 <attach_node(int*, int*)+0x7a>
    16fe:	lea    0x1(%rdx),%ecx
    1701:	mov    %ecx,0x4(%rbp)
    1704:	movslq %ecx,%rcx
    1707:	mov    $0x2,%ebp
    170c:	imul   $0xc,%rcx,%rcx
    1710:	mov    %r12b,(%rax,%rcx,1)
    1714:	dec    %r8d
    1717:	movslq %r8d,%r12
    171a:	cmpb   $0x0,(%r10,%r12,1)
    171f:	movsbl (%r9,%r12,1),%r13d
    1724:	je     1731 <attach_node(int*, int*)+0x97>
    1726:	imul   $0xc,%rdx,%rdx
    172a:	mov    %r13d,0x8(%rax,%rdx,1)
    172f:	jmp    1749 <attach_node(int*, int*)+0xaf>
    1731:	imul   $0xc,%rdx,%rdx
    1735:	lea    0x2(%rbx),%ecx
    1738:	inc    %ebp
    173a:	mov    %ecx,0x8(%rax,%rdx,1)
    173e:	movslq %ecx,%rcx
    1741:	imul   $0xc,%rcx,%rcx
    1745:	mov    %r13b,(%rax,%rcx,1)
    1749:	mov    %bl,(%r9,%r12,1)
    174d:	pop    %rbx
    174e:	movb   $0x1,(%r10,%r12,1)
    1753:	mov    %r11d,(%rdi)
    1756:	mov    %r8d,(%rsi)
    1759:	add    %ebp,0x2dc1(%rip)        # 4520 <cand_node_idx>
    175f:	pop    %rbp
    1760:	pop    %r12
    1762:	pop    %r13
    1764:	retq   

0000000000001765 <build_candidate_expression_tree(char*, int)>:
    1765:	endbr64 
    1769:	push   %r14
    176b:	lea    0x31ef(%rip),%rdx        # 4961 <cand_stack+0x1>
    1772:	push   %r13
    1774:	push   %r12
    1776:	push   %rbp
    1777:	push   %rbx
    1778:	sub    $0x10,%rsp
    177c:	mov    %fs:0x28,%rax
    1785:	mov    %rax,0x8(%rsp)
    178a:	xor    %eax,%eax
    178c:	movl   $0x0,(%rsp)
    1793:	movl   $0x0,0x4(%rsp)
    179b:	movl   $0x1,0x2d7b(%rip)        # 4520 <cand_node_idx>
    17a5:	cmp    %eax,%esi
    17a7:	jg     17bf <build_candidate_expression_tree(char*, int)+0x5a>
    17a9:	mov    $0x0,%ebx
    17ae:	test   %esi,%esi
    17b0:	lea    0x31a9(%rip),%rbp        # 4960 <cand_stack>
    17b7:	cmovs  %ebx,%esi
    17ba:	movslq %esi,%rbx
    17bd:	jmp    17fc <build_candidate_expression_tree(char*, int)+0x97>
    17bf:	mov    (%rdi,%rax,1),%cl
    17c2:	inc    %rax
    17c5:	mov    %cl,-0x1(%rax,%rdx,1)
    17c9:	jmp    17a5 <build_candidate_expression_tree(char*, int)+0x40>
    17cb:	mov    0x0(%rbp,%rbx,1),%r12b
    17d0:	lea    -0x30(%r12),%eax
    17d5:	cmp    $0x9,%al
    17d7:	ja     1808 <build_candidate_expression_tree(char*, int)+0xa3>
    17d9:	mov    (%rsp),%eax
    17dc:	lea    0x315d(%rip),%rdx        # 4940 <digit_stack>
    17e3:	inc    %eax
    17e5:	mov    %eax,(%rsp)
    17e8:	cltq   
    17ea:	mov    %r12b,(%rdx,%rax,1)
    17ee:	lea    0x312b(%rip),%rdx        # 4920 <flag_stack>
    17f5:	movb   $0x0,(%rdx,%rax,1)
    17f9:	dec    %rbx
    17fc:	test   %ebx,%ebx
    17fe:	jg     17cb <build_candidate_expression_tree(char*, int)+0x66>
    1800:	mov    %rsp,%rsi
    1803:	jmpq   18cf <build_candidate_expression_tree(char*, int)+0x16a>
    1808:	cmp    $0x29,%r12b
    180c:	jne    1827 <build_candidate_expression_tree(char*, int)+0xc2>
    180e:	mov    0x4(%rsp),%eax
    1812:	lea    0x30e7(%rip),%rdx        # 4900 <op_stack>
    1819:	inc    %eax
    181b:	mov    %eax,0x4(%rsp)
    181f:	cltq   
    1821:	movb   $0x29,(%rdx,%rax,1)
    1825:	jmp    17f9 <build_candidate_expression_tree(char*, int)+0x94>
    1827:	cmp    $0x28,%r12b
    182b:	jne    185a <build_candidate_expression_tree(char*, int)+0xf5>
    182d:	lea    0x30cc(%rip),%r12        # 4900 <op_stack>
    1834:	movslq 0x4(%rsp),%rdx
    1839:	cmpb   $0x29,(%r12,%rdx,1)
    183e:	mov    %rdx,%rax
    1841:	je     1852 <build_candidate_expression_tree(char*, int)+0xed>
    1843:	mov    %rsp,%rsi
    1846:	lea    0x4(%rsp),%rdi
    184b:	callq  169a <attach_node(int*, int*)>
    1850:	jmp    1834 <build_candidate_expression_tree(char*, int)+0xcf>
    1852:	dec    %eax
    1854:	mov    %eax,0x4(%rsp)
    1858:	jmp    17f9 <build_candidate_expression_tree(char*, int)+0x94>
    185a:	movsbl %r12b,%r13d
    185e:	mov    %r13d,%edi
    1861:	callq  1649 <is_op(char)>
    1866:	test   %al,%al
    1868:	je     17f9 <build_candidate_expression_tree(char*, int)+0x94>
    186a:	lea    0x308f(%rip),%r14        # 4900 <op_stack>
    1871:	mov    0x4(%rsp),%ecx
    1875:	test   %ecx,%ecx
    1877:	jne    188d <build_candidate_expression_tree(char*, int)+0x128>
    1879:	movl   $0x1,0x4(%rsp)
    1881:	mov    %r12b,0x3079(%rip)        # 4901 <op_stack+0x1>
    1888:	jmpq   17f9 <build_candidate_expression_tree(char*, int)+0x94>
    188d:	movslq %ecx,%rax
    1890:	movsbl (%r14,%rax,1),%edi
    1895:	cmp    $0x29,%dil
    1899:	je     18ae <build_candidate_expression_tree(char*, int)+0x149>
    189b:	callq  1668 <priority(char)>
    18a0:	mov    %r13d,%edi
    18a3:	mov    %eax,%esi
    18a5:	callq  1668 <priority(char)>
    18aa:	cmp    %eax,%esi
    18ac:	jge    18c0 <build_candidate_expression_tree(char*, int)+0x15b>
    18ae:	inc    %ecx
    18b0:	mov    %ecx,0x4(%rsp)
    18b4:	movslq %ecx,%rcx
    18b7:	mov    %r12b,(%r14,%rcx,1)
    18bb:	jmpq   17f9 <build_candidate_expression_tree(char*, int)+0x94>
    18c0:	mov    %rsp,%rsi
    18c3:	lea    0x4(%rsp),%rdi
    18c8:	callq  169a <attach_node(int*, int*)>
    18cd:	jmp    1871 <build_candidate_expression_tree(char*, int)+0x10c>
    18cf:	cmpl   $0x0,0x4(%rsp)
    18d4:	jle    18e2 <build_candidate_expression_tree(char*, int)+0x17d>
    18d6:	lea    0x4(%rsp),%rdi
    18db:	callq  169a <attach_node(int*, int*)>
    18e0:	jmp    18cf <build_candidate_expression_tree(char*, int)+0x16a>
    18e2:	movslq (%rsp),%rax
    18e6:	lea    0x3053(%rip),%rdx        # 4940 <digit_stack>
    18ed:	movsbq (%rdx,%rax,1),%rax
    18f2:	lea    0x2e87(%rip),%rdx        # 4780 <cand>
    18f9:	imul   $0xc,%rax,%rax
    18fd:	add    %rdx,%rax
    1900:	mov    0x8(%rsp),%rbx
    1905:	xor    %fs:0x28,%rbx
    190e:	je     1915 <build_candidate_expression_tree(char*, int)+0x1b0>
    1910:	callq  11a0 <__stack_chk_fail@plt>
    1915:	add    $0x10,%rsp
    1919:	pop    %rbx
    191a:	pop    %rbp
    191b:	pop    %r12
    191d:	pop    %r13
    191f:	pop    %r14
    1921:	retq   

0000000000001922 <compare_answer_and_candidate(tree_node*, tree_node*, int)>:
    1922:	endbr64 
    1926:	test   %rdi,%rdi
    1929:	sete   %al
    192c:	test   %rsi,%rsi
    192f:	sete   %cl
    1932:	or     %cl,%al
    1934:	jne    1978 <compare_answer_and_candidate(tree_node*, tree_node*, int)+0x56>
    1936:	lea    0x2a43(%rip),%rcx        # 4380 <ans>
    193d:	lea    0x2e3c(%rip),%rsi        # 4780 <cand>
    1944:	xor    %edi,%edi
    1946:	cmp    %edi,%edx
    1948:	jl     197b <compare_answer_and_candidate(tree_node*, tree_node*, int)+0x59>
    194a:	mov    (%rsi),%r10b
    194d:	mov    %rcx,%r9
    1950:	mov    %rsi,%r8
    1953:	cmp    %r10b,(%rcx)
    1956:	jne    197d <compare_answer_and_candidate(tree_node*, tree_node*, int)+0x5b>
    1958:	mov    0x4(%rsi),%r11d
    195c:	cmp    %r11d,0x4(%rcx)
    1960:	jne    197d <compare_answer_and_candidate(tree_node*, tree_node*, int)+0x5b>
    1962:	mov    0x8(%r8),%r8d
    1966:	add    $0xc,%rcx
    196a:	add    $0xc,%rsi
    196e:	cmp    %r8d,0x8(%r9)
    1972:	jne    197d <compare_answer_and_candidate(tree_node*, tree_node*, int)+0x5b>
    1974:	inc    %edi
    1976:	jmp    1946 <compare_answer_and_candidate(tree_node*, tree_node*, int)+0x24>
    1978:	xor    %eax,%eax
    197a:	retq   
    197b:	mov    $0x1,%al
    197d:	retq   

000000000000197e <print_candidate_tree_inorder(tree_node*)>:
    197e:	endbr64 
    1982:	push   %rbp
    1983:	lea    0x2df6(%rip),%rbp        # 4780 <cand>
    198a:	push   %rbx
    198b:	mov    %rdi,%rbx
    198e:	push   %rdx
    198f:	cmpb   $0x0,(%rbx)
    1992:	je     19c7 <print_candidate_tree_inorder(tree_node*)+0x49>
    1994:	movslq 0x4(%rbx),%rdi
    1998:	imul   $0xc,%rdi,%rdi
    199c:	add    %rbp,%rdi
    199f:	callq  197e <print_candidate_tree_inorder(tree_node*)>
    19a4:	movsbl (%rbx),%edx
    19a7:	mov    $0x1,%edi
    19ac:	xor    %eax,%eax
    19ae:	lea    0x64f(%rip),%rsi        # 2004 <_IO_stdin_used+0x4>
    19b5:	callq  1120 <__printf_chk@plt>
    19ba:	movslq 0x8(%rbx),%rbx
    19be:	imul   $0xc,%rbx,%rbx
    19c2:	add    %rbp,%rbx
    19c5:	jmp    198f <print_candidate_tree_inorder(tree_node*)+0x11>
    19c7:	pop    %rax
    19c8:	pop    %rbx
    19c9:	pop    %rbp
    19ca:	retq   

00000000000019cb <print_answer_tree_inorder(tree_node*)>:
    19cb:	endbr64 
    19cf:	push   %rbp
    19d0:	lea    0x29a9(%rip),%rbp        # 4380 <ans>
    19d7:	push   %rbx
    19d8:	mov    %rdi,%rbx
    19db:	push   %rdx
    19dc:	cmpb   $0x0,(%rbx)
    19df:	je     1a14 <print_answer_tree_inorder(tree_node*)+0x49>
    19e1:	movslq 0x4(%rbx),%rdi
    19e5:	imul   $0xc,%rdi,%rdi
    19e9:	add    %rbp,%rdi
    19ec:	callq  19cb <print_answer_tree_inorder(tree_node*)>
    19f1:	movsbl (%rbx),%edx
    19f4:	mov    $0x1,%edi
    19f9:	xor    %eax,%eax
    19fb:	lea    0x602(%rip),%rsi        # 2004 <_IO_stdin_used+0x4>
    1a02:	callq  1120 <__printf_chk@plt>
    1a07:	movslq 0x8(%rbx),%rbx
    1a0b:	imul   $0xc,%rbx,%rbx
    1a0f:	add    %rbp,%rbx
    1a12:	jmp    19dc <print_answer_tree_inorder(tree_node*)+0x11>
    1a14:	pop    %rax
    1a15:	pop    %rbx
    1a16:	pop    %rbp
    1a17:	retq   

0000000000001a18 <read_line(char*)>:
    1a18:	endbr64 
    1a1c:	push   %rbp
    1a1d:	lea    0x320(%rdi),%rbp
    1a24:	push   %rbx
    1a25:	mov    %rdi,%rbx
    1a28:	push   %rdx
    1a29:	callq  11d0 <getchar@plt>
    1a2e:	cmp    %rbp,%rbx
    1a31:	jae    1a3f <read_line(char*)+0x27>
    1a33:	cmp    $0xa,%al
    1a35:	je     1a3f <read_line(char*)+0x27>
    1a37:	inc    %rbx
    1a3a:	mov    %al,-0x1(%rbx)
    1a3d:	jmp    1a29 <read_line(char*)+0x11>
    1a3f:	movb   $0x0,(%rbx)
    1a42:	pop    %rax
    1a43:	pop    %rbx
    1a44:	pop    %rbp
    1a45:	retq   

0000000000001a46 <explode_bomb()>:
    1a46:	endbr64 
    1a4a:	push   %rax
    1a4b:	pop    %rax
    1a4c:	lea    0x5b5(%rip),%rdi        # 2008 <_IO_stdin_used+0x8>
    1a53:	push   %rax
    1a54:	callq  11f0 <puts@plt>
    1a59:	xor    %edi,%edi
    1a5b:	callq  11c0 <exit@plt>

0000000000001a60 <string_not_equal(char*, char*)>:
    1a60:	endbr64 
    1a64:	xor    %eax,%eax
    1a66:	mov    (%rsi,%rax,1),%dl
    1a69:	test   %dl,%dl
    1a6b:	je     1a79 <string_not_equal(char*, char*)+0x19>
    1a6d:	inc    %rax
    1a70:	cmp    -0x1(%rdi,%rax,1),%dl
    1a74:	je     1a66 <string_not_equal(char*, char*)+0x6>
    1a76:	xor    %eax,%eax
    1a78:	retq   
    1a79:	mov    $0x1,%al
    1a7b:	retq   

0000000000001a7c <string_len(char*)>:
    1a7c:	endbr64 
    1a80:	xor    %eax,%eax
    1a82:	mov    %eax,%r8d
    1a85:	inc    %rax
    1a88:	cmpb   $0x0,-0x1(%rdi,%rax,1)
    1a8d:	jne    1a82 <string_len(char*)+0x6>
    1a8f:	mov    %r8d,%eax
    1a92:	retq   

0000000000001a93 <run_lock_test(baselock*, int, int)>:
    1a93:	endbr64 
    1a97:	sub    $0x18,%rsp
    1a9b:	mov    (%rdi),%rax
    1a9e:	mov    %edx,0xc(%rsp)
    1aa2:	mov    %esi,0x8(%rsp)
    1aa6:	mov    %rdi,(%rsp)
    1aaa:	callq  *(%rax)
    1aac:	mov    (%rsp),%rdi
    1ab0:	mov    0x8(%rsp),%esi
    1ab4:	test   %eax,%eax
    1ab6:	mov    0xc(%rsp),%edx
    1aba:	jne    1ac1 <run_lock_test(baselock*, int, int)+0x2e>
    1abc:	callq  1a46 <explode_bomb()>
    1ac1:	mov    (%rdi),%rax
    1ac4:	callq  *0x8(%rax)
    1ac7:	test   %al,%al
    1ac9:	je     1abc <run_lock_test(baselock*, int, int)+0x29>
    1acb:	add    $0x18,%rsp
    1acf:	retq   

0000000000001ad0 <read_six_numbers(char*, int*)>:
    1ad0:	endbr64 
    1ad4:	lea    0x14(%rsi),%rax
    1ad8:	push   %rbx
    1ad9:	lea    0x4(%rsi),%rcx
    1add:	mov    %rsi,%rdx
    1ae0:	push   %rax
    1ae1:	lea    0x10(%rsi),%rax
    1ae5:	lea    0xc(%rsi),%r9
    1ae9:	mov    %rsi,%rbx
    1aec:	push   %rax
    1aed:	lea    0x8(%rsi),%r8
    1af1:	xor    %eax,%eax
    1af3:	lea    0x52e(%rip),%rsi        # 2028 <_IO_stdin_used+0x28>
    1afa:	callq  1170 <__isoc99_sscanf@plt>
    1aff:	pop    %rdx
    1b00:	pop    %rcx
    1b01:	cmp    $0x6,%eax
    1b04:	jne    1b0b <read_six_numbers(char*, int*)+0x3b>
    1b06:	cmpl   $0x0,(%rbx)
    1b09:	jne    1b10 <read_six_numbers(char*, int*)+0x40>
    1b0b:	callq  1a46 <explode_bomb()>
    1b10:	pop    %rbx
    1b11:	retq   

0000000000001b12 <phase_1(char*)>:
    1b12:	endbr64 
    1b16:	push   %rdx
    1b17:	movslq 0x2522(%rip),%rsi        # 4040 <phase_1_offset>
    1b1e:	lea    0x253b(%rip),%rax        # 4060 <w1>
    1b25:	add    %rax,%rsi
    1b28:	callq  1a60 <string_not_equal(char*, char*)>
    1b2d:	test   %al,%al
    1b2f:	jne    1b36 <phase_1(char*)+0x24>
    1b31:	callq  1a46 <explode_bomb()>
    1b36:	pop    %rax
    1b37:	retq   

0000000000001b38 <phase_2(char*)>:
    1b38:	endbr64 
    1b3c:	push   %rdx
    1b3d:	lea    0x24dc(%rip),%rsi        # 4020 <phase_2_nums>
    1b44:	callq  1ad0 <read_six_numbers(char*, int*)>
    1b49:	lea    0x24d0(%rip),%rax        # 4020 <phase_2_nums>
    1b50:	mov    0x24e6(%rip),%ecx        # 403c <phase_2_nums+0x1c>
    1b56:	lea    0x14(%rax),%rdx
    1b5a:	mov    (%rax),%esi
    1b5c:	imul   %ecx,%esi
    1b5f:	cmp    %esi,0x4(%rax)
    1b62:	je     1b69 <phase_2(char*)+0x31>
    1b64:	callq  1a46 <explode_bomb()>
    1b69:	add    $0x4,%rax
    1b6d:	cmp    %rax,%rdx
    1b70:	jne    1b5a <phase_2(char*)+0x22>
    1b72:	pop    %rax
    1b73:	retq   

0000000000001b74 <phase_3(char*)>:
    1b74:	endbr64 
    1b78:	sub    $0x28,%rsp
    1b7c:	lea    0x4b7(%rip),%rsi        # 203a <_IO_stdin_used+0x3a>
    1b83:	mov    %fs:0x28,%rax
    1b8c:	mov    %rax,0x18(%rsp)
    1b91:	xor    %eax,%eax
    1b93:	lea    0xf(%rsp),%rcx
    1b98:	lea    0x10(%rsp),%rdx
    1b9d:	lea    0x14(%rsp),%r8
    1ba2:	callq  1170 <__isoc99_sscanf@plt>
    1ba7:	cmp    $0x3,%eax
    1baa:	jne    1c11 <phase_3(char*)+0x9d>
    1bac:	cmpl   $0x7,0x10(%rsp)
    1bb1:	ja     1c11 <phase_3(char*)+0x9d>
    1bb3:	mov    0x10(%rsp),%eax
    1bb7:	lea    0x5f6(%rip),%rdx        # 21b4 <_IO_stdin_used+0x1b4>
    1bbe:	movslq (%rdx,%rax,4),%rax
    1bc2:	add    %rdx,%rax    
    1bc5:	notrack jmpq *%rax
    1bc8:	cmpl   $0x30,0x14(%rsp) # 48
    1bcd:	mov    $0x70,%al    # p
    1bcf:	je     1c16 <phase_3(char*)+0xa2>
    1bd1:	jmp    1c11 <phase_3(char*)+0x9d>
    1bd3:	cmpl   $0xdd,0x14(%rsp) 
    1bdb:	mov    $0x62,%al    
    1bdd:	je     1c16 <phase_3(char*)+0xa2>
    1bdf:	jmp    1c11 <phase_3(char*)+0x9d>
    1be1:	cmpl   $0x2f0,0x14(%rsp)   
    1be9:	mov    $0x63,%al    
    1beb:	je     1c16 <phase_3(char*)+0xa2>
    1bed:	jmp    1c11 <phase_3(char*)+0x9d>
    1bef:	cmpl   $0x10,0x14(%rsp) 
    1bf4:	mov    $0x74,%al    
    1bf6:	je     1c16 <phase_3(char*)+0xa2>
    1bf8:	jmp    1c11 <phase_3(char*)+0x9d>
    1bfa:	cmpl   $0x3,0x14(%rsp)
    1bff:	mov    $0x76,%al
    1c01:	je     1c16 <phase_3(char*)+0xa2>
    1c03:	jmp    1c11 <phase_3(char*)+0x9d>
    1c05:	cmpl   $0x200,0x14(%rsp)
    1c0d:	mov    $0x77,%al
    1c0f:	je     1c16 <phase_3(char*)+0xa2>
    1c11:	callq  1a46 <explode_bomb()>
    1c16:	cmp    %al,0xf(%rsp)
    1c1a:	jne    1c11 <phase_3(char*)+0x9d>
    1c1c:	mov    0x18(%rsp),%rax
    1c21:	xor    %fs:0x28,%rax
    1c2a:	je     1c31 <phase_3(char*)+0xbd>
    1c2c:	callq  11a0 <__stack_chk_fail@plt>
    1c31:	add    $0x28,%rsp
    1c35:	retq   

0000000000001c36 <phase_4(long)>:
    1c36:	endbr64 
    1c3a:	mov    %rdi,%rax
    1c3d:	sar    $0x20,%rdi   # 算术右移32位,取高32位
    1c41:	push   %rdx
    1c42:	lea    -0x1(%rdi),%edx
    1c45:	cmp    $0xd,%edx    
    1c48:	ja     1c51 <phase_4(long)+0x1b>
    1c4a:	dec    %eax
    1c4c:	cmp    $0xd,%eax    
    1c4f:	jbe    1c56 <phase_4(long)+0x20>
    1c51:	callq  1a46 <explode_bomb()>
    1c56:	callq  1548 <hope(int)>
    1c5b:	cmp    $0x1000000,%eax
    1c60:	jne    1c51 <phase_4(long)+0x1b>
    1c62:	pop    %rax
    1c63:	retq   

0000000000001c64 <phase_5(long, long, long)>:
    1c64:	endbr64 
    1c68:	sub    $0x48,%rsp
    1c6c:	lea    0x2045(%rip),%rcx        # 3cb8 <vtable for lock1+0x10>
    1c73:	mov    %fs:0x28,%rax
    1c7c:	mov    %rax,0x38(%rsp)
    1c81:	xor    %eax,%eax
    1c83:	lea    0x1ffe(%rip),%rax        # 3c88 <vtable for baselock+0x10>
    1c8a:	mov    %rcx,0x18(%rsp)
    1c8f:	lea    0x2052(%rip),%rcx        # 3ce8 <vtable for lock2+0x10>
    1c96:	mov    %rax,0x8(%rsp)
    1c9b:	mov    $0xffffffff,%eax
    1ca0:	shl    $0x20,%rax
    1ca4:	mov    %rcx,0x28(%rsp)
    1ca9:	mov    %rax,0x10(%rsp)
    1cae:	mov    %rax,0x20(%rsp)
    1cb3:	mov    %rax,0x30(%rsp)

    1cb8:	cmp    $0x1,%rdi
    1cbc:	jg     1cc5 <phase_5(long, long, long)+0x61>

    1cbe:	lea    0x28(%rsp),%rdi
    1cc3:	jmp    1ceb <phase_5(long, long, long)+0x87>

    1cc5:	cmp    $0x3,%rdi
    1cc9:	jg     1cd2 <pd2hase_5(long, long, long)+0x6e>

    1ccb:	lea    0x18(%rsp),%rdi
    1cd0:	jmp    1ceb <phase_5(long, long, long)+0x87>

    1cd2:	cmp    $0x8,%rdi
    1cd6:	lea    0x8(%rsp),%rdi
    1cdb:	jne    1ceb <phase_5(long, long, long)+0x87>

    1cdd:	callq  1a93 <run_lock_test(baselock*, int, int)>
    
    1ce2:	movb   $0x79,0x234f(%rip)        # 4038 <phase_2_nums+0x18>
    1ce9:	jmp    1cf0 <phase_5(long, long, long)+0x8c>
    
    1ceb:	callq  1a93 <run_lock_test(baselock*, int, int)>
    1cf0:	mov    0x38(%rsp),%rax
    1cf5:	xor    %fs:0x28,%rax
    1cfe:	je     1d05 <phase_5(long, long, long)+0xa1>
    
    1d00:	callq  11a0 <__stack_chk_fail@plt>
    1d05:	add    $0x48,%rsp
    1d09:	retq   

0000000000001d0a <phase_6(char*)>:
    1d0a:	endbr64 
    1d0e:	push   %rdx
    1d0f:	callq  1a7c <string_len(char*)>
    1d14:	lea    0x27f0(%rip),%rdx        # 450b <w2+0xb>
    1d1b:	mov    %eax,%r8d
    1d1e:	xor    %eax,%eax
    1d20:	cmp    $0x6,%r8d    # string_len == 6
    1d24:	je     1d2b <phase_6(char*)+0x21>
    1d26:	callq  1a46 <explode_bomb()>
    1d2b:	mov    (%rdi,%rax,1),%cl
    1d2e:	inc    %rax
    1d31:	mov    %cl,-0x1(%rax,%rdx,1)    # 把w2变成我的字符串
    1d35:	cmp    $0x7,%rax
    1d39:	jne    1d2b <phase_6(char*)+0x21>
    1d3b:	mov    $0x11,%esi
    1d40:	lea    0x27b9(%rip),%rdi        # 4500 <w2>
    1d47:	callq  1765 <build_candidate_expression_tree(char*, int)>#我的表达式存在%rbp里
    1d4c:	mov    $0x11,%edx
    1d51:	lea    0x26ac(%rip),%rdi        # 4404 <ans+0x84>
    1d58:	mov    %rax,%rsi
    1d5b:	callq  1922 <compare_answer_and_candidate(tree_node*, tree_node*, int)>
    1d60:	test   %al,%al
    1d62:	je     1d26 <phase_6(char*)+0x1c>
    1d64:	pop    %rax
    1d65:	retq   

0000000000001d66 <secret_phase(long)>:
    1d66:	endbr64 
    1d6a:	cvtsi2ss %rdi,%xmm0
    1d6f:	addss  %xmm0,%xmm0
    1d73:	addss  0x475(%rip),%xmm0        # 21f0 <typeinfo name for lock2+0x7>
    1d7b:	cvtss2sd %xmm0,%xmm0
    1d7f:	comisd 0x471(%rip),%xmm0        # 21f8 <typeinfo name for lock2+0xf>
    1d87:	jae    1d97 <secret_phase(long)+0x31>   # >=
    1d89:	movsd  0x46f(%rip),%xmm1        # 2200 <typeinfo name for lock2+0x17>
    1d91:	comisd %xmm0,%xmm1
    1d95:	jb     1d9d <secret_phase(long)+0x37>
    1d97:	push   %rax
    1d98:	callq  1a46 <explode_bomb()>
    1d9d:	retq   

0000000000001d9e <congratulations()>:
    1d9e:	endbr64 
    1da2:	sub    $0x18,%rsp
    1da6:	lea    0x296(%rip),%rdi        # 2043 <_IO_stdin_used+0x43>
    1dad:	mov    %fs:0x28,%rax
    1db6:	mov    %rax,0x8(%rsp)
    1dbb:	xor    %eax,%eax
    1dbd:	cmpb   $0x79,0x2274(%rip)        # 4038 <phase_2_nums+0x18>
    1dc4:	jne    1dfb <congratulations()+0x5d>
    1dc6:	lea    0x2b8(%rip),%rdi        # 2085 <_IO_stdin_used+0x85>
    1dcd:	callq  11f0 <puts@plt>
    1dd2:	mov    %rsp,%rsi
    1dd5:	xor    %eax,%eax
    1dd7:	lea    0x2e5(%rip),%rdi        # 20c3 <_IO_stdin_used+0xc3>
    1dde:	movq   $0x0,(%rsp)
    1de6:	callq  11b0 <__isoc99_scanf@plt>
    1deb:	mov    (%rsp),%rdi
    1def:	callq  1d66 <secret_phase(long)>
    1df4:	lea    0x2cc(%rip),%rdi        # 20c7 <_IO_stdin_used+0xc7>
    1dfb:	callq  11f0 <puts@plt>
    1e00:	mov    0x8(%rsp),%rax
    1e05:	xor    %fs:0x28,%rax
    1e0e:	je     1e15 <congratulations()+0x77>
    1e10:	callq  11a0 <__stack_chk_fail@plt>
    1e15:	add    $0x18,%rsp
    1e19:	retq   

0000000000001e1a <baselock::is_holding(int)>:
    1e1a:	endbr64 
    1e1e:	mov    0xc(%rdi),%edx   # edx = num2
    1e21:	cmp    %esi,%edx    # compare num2 and num1
    1e23:	not    %edx
    1e25:	sete   %al  # if(num1 == num2) al=1
    1e28:	shr    $0x1f,%edx   # 取~num2的符号位
    1e2b:	and    %edx,%eax    # 如果num2>0 eax!=0
    1e2d:	retq   

0000000000001e2e <baselock::mem_sync()>:
    1e2e:	endbr64 
    1e32:	retq   
    1e33:	nop

0000000000001e34 <lock1::is_holding(int)>:
    1e34:	endbr64 
    1e38:	mov    0xc(%rdi),%edx
    1e3b:	cmp    %esi,%edx
    1e3d:	not    %edx
    1e3f:	sete   %al
    1e42:	shr    $0x1f,%edx
    1e45:	and    %edx,%eax
    1e47:	retq   

0000000000001e48 <lock1::mem_sync()>:
    1e48:	endbr64 
    1e4c:	retq   
    1e4d:	nop

0000000000001e4e <lock2::is_holding(int)>:
    1e4e:	endbr64 
    1e52:	mov    0xc(%rdi),%edx
    1e55:	cmp    %esi,%edx
    1e57:	not    %edx
    1e59:	sete   %al
    1e5c:	shr    $0x1f,%edx
    1e5f:	and    %edx,%eax
    1e61:	retq   

0000000000001e62 <lock2::mem_sync()>:
    1e62:	endbr64 
    1e66:	retq   
    1e67:	nopw   0x0(%rax,%rax,1)

0000000000001e70 <__libc_csu_init>:
    1e70:	endbr64 
    1e74:	push   %r15
    1e76:	lea    0x1de3(%rip),%r15        # 3c60 <__frame_dummy_init_array_entry>
    1e7d:	push   %r14
    1e7f:	mov    %rdx,%r14
    1e82:	push   %r13
    1e84:	mov    %rsi,%r13
    1e87:	push   %r12
    1e89:	mov    %edi,%r12d
    1e8c:	push   %rbp
    1e8d:	lea    0x1ddc(%rip),%rbp        # 3c70 <__do_global_dtors_aux_fini_array_entry>
    1e94:	push   %rbx
    1e95:	sub    %r15,%rbp
    1e98:	sub    $0x8,%rsp
    1e9c:	callq  1000 <_init>
    1ea1:	sar    $0x3,%rbp
    1ea5:	je     1ec6 <__libc_csu_init+0x56>
    1ea7:	xor    %ebx,%ebx
    1ea9:	nopl   0x0(%rax)
    1eb0:	mov    %r14,%rdx
    1eb3:	mov    %r13,%rsi
    1eb6:	mov    %r12d,%edi
    1eb9:	callq  *(%r15,%rbx,8)
    1ebd:	add    $0x1,%rbx
    1ec1:	cmp    %rbx,%rbp
    1ec4:	jne    1eb0 <__libc_csu_init+0x40>
    1ec6:	add    $0x8,%rsp
    1eca:	pop    %rbx
    1ecb:	pop    %rbp
    1ecc:	pop    %r12
    1ece:	pop    %r13
    1ed0:	pop    %r14
    1ed2:	pop    %r15
    1ed4:	retq   
    1ed5:	data16 nopw %cs:0x0(%rax,%rax,1)

0000000000001ee0 <__libc_csu_fini>:
    1ee0:	endbr64 
    1ee4:	retq   

Disassembly of section .fini:

0000000000001ee8 <_fini>:
    1ee8:	endbr64 
    1eec:	sub    $0x8,%rsp
    1ef0:	add    $0x8,%rsp
    1ef4:	retq   
